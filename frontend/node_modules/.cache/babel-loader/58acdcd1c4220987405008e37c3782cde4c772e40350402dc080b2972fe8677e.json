{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      pro: {\n        fullname: '',\n        email: '',\n        service_name: '',\n        experience: null\n      },\n      rating: null\n    };\n  },\n  methods: {\n    async submitReview(service_name) {\n      try {\n        const response = await axios.post(`/pro_remarks/${service_name}`, {\n          \"rating\": this.rating\n        }, {\n          headers: {\n            Authorization: `${localStorage.getItem('authToken')}`\n          }\n        });\n        if (response.status === 200) {\n          console.log('Added successfully');\n          this.review = '';\n          this.$router.push({\n            name: 'CustomerHome',\n            query: {\n              \"message\": \"You rating has been marked\"\n            }\n          });\n        }\n      } catch (error) {\n        if (error.response.status === 401) {\n          this.$router.push({\n            name: 'CustomerLogin',\n            query: {\n              \"message\": \"You need to login first\"\n            }\n          });\n        }\n      }\n    }\n  },\n  async mounted() {\n    let service_name = this.$route.query.service_name;\n    try {\n      const response = await axios.get(`http://localhost:5000/pro_remarks/${service_name}`, {\n        headers: {\n          Authorization: `${localStorage.getItem('authToken')}`\n        }\n      });\n      if (response.status === 200) {\n        this.pro.fullname = response.data.pro_name;\n        this.pro.email = response.data.pro_email;\n        this.pro.experience = response.data.experience;\n        this.pro.service_name = response.data.service_name;\n      }\n    } catch (error) {\n      console.log(error.response);\n    }\n  }\n};","map":{"version":3,"names":["axios","data","pro","fullname","email","service_name","experience","rating","methods","submitReview","response","post","headers","Authorization","localStorage","getItem","status","console","log","review","$router","push","name","query","error","mounted","$route","get","pro_name","pro_email"],"sources":["/home/shrisiitm/MAD 2 Project old/MAD 2 Project/frontend/src/components/ProfessionalRating.vue"],"sourcesContent":["<template>\n    <div class=\"rating-container\">\n      <h2>Service Remarks</h2>\n      \n      <div class=\"content\">\n        <div>Name: {{ pro.fullname }}</div>\n        <div>Email Id: {{ pro.email }}</div>\n        <div>Service Name: {{ pro.service_name }}</div>\n        <div>Experience: {{ pro.experience }} Years</div>\n      </div>\n  \n      <form @submit.prevent=\"submitReview(pro.service_name)\">\n        <h4>Rate Service: </h4>\n        \n        <label for=\"exc\"> Excellent</label>\n          <input type=\"radio\" v-model=\"rating\" value=\"5\" required id=\"exc\" />\n         \n        <label for=\"good\">Good</label>\n          <input type=\"radio\" v-model=\"rating\" value=\"4\" required id=\"good\"/>\n\n        <label for=\"avg\"> Average</label>\n          <input type=\"radio\" v-model=\"rating\" value=\"3\" required id=\"avg\"/>\n         \n        <label for=\"bad\">Bad</label>\n          <input type=\"radio\" v-model=\"rating\" value=\"2\" required id=\"bad\"/>\n          \n        <label for=\"wrst\">Worst</label>\n          <input type=\"radio\" v-model=\"rating\" value=\"1\" required id=\"wrst\"/>\n          \n        \n        <button type=\"submit\" :disabled=\"rating === null\">Submit</button>\n      </form>\n    </div>\n  </template>\n  \n  <script>\nimport axios from 'axios';\n\n  export default {\n    data() {\n      return {\n        pro: {\n          fullname: '',\n          email: '', \n          service_name: '', \n          experience: null, \n        },\n        rating: null,  \n      };\n    },\n    methods: {\n      async submitReview(service_name) {\n        try{\n          const response = await axios.post(`/pro_remarks/${service_name}`,{\"rating\":this.rating},{\n            headers:{\n              Authorization:`${localStorage.getItem('authToken')}`\n            }\n          })\n          if(response.status === 200){\n            console.log('Added successfully')\n            this.review = '';\n            this.$router.push({name:'CustomerHome', query:{\"message\":\"You rating has been marked\"}})\n          }\n        }\n        catch(error){\n          if(error.response.status === 401){\n            this.$router.push({name:'CustomerLogin', query:{\"message\":\"You need to login first\"}})\n          }\n        } \n      },\n    },\n\n    async mounted(){\n      let service_name = this.$route.query.service_name\n      try{\n      const response = await axios.get(`http://localhost:5000/pro_remarks/${service_name}`,{\n        headers:{\n          Authorization:`${localStorage.getItem('authToken')}`\n        }\n      })\n      if(response.status === 200){\n        this.pro.fullname = response.data.pro_name\n        this.pro.email = response.data.pro_email\n        this.pro.experience = response.data.experience\n        this.pro.service_name = response.data.service_name\n      }\n      }\n      catch(error){\n        console.log(error.response)\n      }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .rating-container {\n    max-width: 600px;\n    margin: auto;\n    background: white;\n    border-radius: 8px;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n    padding: 20px;\n    text-align: center;\n  }\n  \n  h2 {\n    color: #333;\n  }\n  \n  .content {\n    display: flex;\n    justify-content: space-between;\n    margin: 20px 0;\n  }\n  \n  .content div {\n    flex: 1;\n    padding: 10px;\n    border-right: 1px solid #ddd;\n    height: 35px;\n    text-align: center;\n  }\n  \n  .content div:last-child {\n    border-right: none;\n  }\n  \n  label {\n    margin-right: 10px;\n  }\n  \n  textarea {\n    width: 96%;\n    height: 100px;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    padding: 10px;\n    resize: none;\n    margin-top: 10px;\n    margin-bottom: 20px;\n  }\n  \n  button {\n    margin-top: 30px;\n    background-color: #28a745;\n    color: white;\n    border: none;\n    border-radius: 4px;\n    padding: 10px 20px;\n    cursor: pointer;\n    transition: background-color 0.3s;\n  }\n  \n  button:hover {\n    background-color: #218838;\n  }\n  \n  button:disabled {\n    background-color: #ccc;\n    cursor: not-allowed;\n  }\n  </style>\n  "],"mappings":";AAoCA,OAAOA,KAAI,MAAO,OAAO;AAEvB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,GAAG,EAAE;QACHC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE,EAAE;QACTC,YAAY,EAAE,EAAE;QAChBC,UAAU,EAAE;MACd,CAAC;MACDC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,YAAYA,CAACJ,YAAY,EAAE;MAC/B,IAAG;QACD,MAAMK,QAAO,GAAI,MAAMV,KAAK,CAACW,IAAI,CAAC,gBAAgBN,YAAY,EAAE,EAAC;UAAC,QAAQ,EAAC,IAAI,CAACE;QAAM,CAAC,EAAC;UACtFK,OAAO,EAAC;YACNC,aAAa,EAAC,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;UACpD;QACF,CAAC;QACD,IAAGL,QAAQ,CAACM,MAAK,KAAM,GAAG,EAAC;UACzBC,OAAO,CAACC,GAAG,CAAC,oBAAoB;UAChC,IAAI,CAACC,MAAK,GAAI,EAAE;UAChB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;YAACC,IAAI,EAAC,cAAc;YAAEC,KAAK,EAAC;cAAC,SAAS,EAAC;YAA4B;UAAC,CAAC;QACzF;MACF,EACA,OAAMC,KAAK,EAAC;QACV,IAAGA,KAAK,CAACd,QAAQ,CAACM,MAAK,KAAM,GAAG,EAAC;UAC/B,IAAI,CAACI,OAAO,CAACC,IAAI,CAAC;YAACC,IAAI,EAAC,eAAe;YAAEC,KAAK,EAAC;cAAC,SAAS,EAAC;YAAyB;UAAC,CAAC;QACvF;MACF;IACF;EACF,CAAC;EAED,MAAME,OAAOA,CAAA,EAAE;IACb,IAAIpB,YAAW,GAAI,IAAI,CAACqB,MAAM,CAACH,KAAK,CAAClB,YAAW;IAChD,IAAG;MACH,MAAMK,QAAO,GAAI,MAAMV,KAAK,CAAC2B,GAAG,CAAC,qCAAqCtB,YAAY,EAAE,EAAC;QACnFO,OAAO,EAAC;UACNC,aAAa,EAAC,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;QACpD;MACF,CAAC;MACD,IAAGL,QAAQ,CAACM,MAAK,KAAM,GAAG,EAAC;QACzB,IAAI,CAACd,GAAG,CAACC,QAAO,GAAIO,QAAQ,CAACT,IAAI,CAAC2B,QAAO;QACzC,IAAI,CAAC1B,GAAG,CAACE,KAAI,GAAIM,QAAQ,CAACT,IAAI,CAAC4B,SAAQ;QACvC,IAAI,CAAC3B,GAAG,CAACI,UAAS,GAAII,QAAQ,CAACT,IAAI,CAACK,UAAS;QAC7C,IAAI,CAACJ,GAAG,CAACG,YAAW,GAAIK,QAAQ,CAACT,IAAI,CAACI,YAAW;MACnD;IACA,EACA,OAAMmB,KAAK,EAAC;MACVP,OAAO,CAACC,GAAG,CAACM,KAAK,CAACd,QAAQ;IAC5B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}