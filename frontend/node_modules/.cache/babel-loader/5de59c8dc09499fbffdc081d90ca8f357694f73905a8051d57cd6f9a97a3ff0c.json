{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      form: {\n        email: \"\",\n        password: \"\"\n      },\n      errorMessage: \"\"\n    };\n  },\n  methods: {\n    async loginCustomer() {\n      try {\n        // Send POST request to Flask backend\n        const response = await axios.post(\"http://127.0.0.1:5000/login_customer\", this.form, {\n          validateStatus: function (status) {\n            status === 200 || status === 400 || status === 404;\n          }\n        });\n\n        // Handle successful login response\n        if (response.status === 200) {\n          localStorage.setItem(\"authToken\", response.data.token);\n        }\n      } catch (error) {\n        if (error.response) {\n          // Handle error response\n          this.errorMessage = error.response.data.message;\n        } else {\n          this.errorMessage = \"An error occurred. Please try again.\";\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","form","email","password","errorMessage","methods","loginCustomer","response","post","validateStatus","status","localStorage","setItem","token","error","message"],"sources":["E:\\MAD 2 Project\\MAD 2 Project\\frontend\\src\\components\\CustomerLogin.vue"],"sourcesContent":["<template>\r\n    <div class=\"login-container\">\r\n      <h2>Customer Login</h2>\r\n      <form @submit.prevent=\"loginCustomer\">\r\n        <div>\r\n          <label for=\"email\">Email:</label>\r\n          <input type=\"email\" v-model=\"email\" id=\"email\" placeholder=\"Enter your email\" required />\r\n        </div>\r\n  \r\n        <div>\r\n          <label for=\"password\">Password:</label>\r\n          <input type=\"password\" v-model=\"password\" id=\"password\" placeholder=\"Enter your password\" required />\r\n        </div>\r\n  \r\n        <button type=\"submit\">Login</button>\r\n  \r\n        <div v-if=\"errorMessage\" class=\"error-message\">\r\n          <p>{{ errorMessage }}</p>\r\n        </div>\r\n      </form>\r\n  \r\n      <div class=\"register-container\">\r\n        <span>Don't have an account?</span>\r\n        <router-link to=\"/customer_register\">Register</router-link>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from \"axios\";\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        form:{\r\n          email: \"\",\r\n          password: \"\"\r\n        },\r\n        errorMessage: \"\",\r\n      };\r\n    },\r\n    methods: {\r\n      async loginCustomer() {\r\n        try {\r\n          // Send POST request to Flask backend\r\n          const response = await axios.post(\"http://127.0.0.1:5000/login_customer\", this.form,{\r\n          validateStatus:function(status){\r\n              status === 200 || status === 400 || status === 404          }\r\n          \r\n          });\r\n  \r\n          // Handle successful login response\r\n          if (response.status === 200) {\r\n            localStorage.setItem(\"authToken\", response.data.token);\r\n          }\r\n        } catch (error) {\r\n          if (error.response) {\r\n            // Handle error response\r\n            this.errorMessage = error.response.data.message;\r\n          } else {\r\n            this.errorMessage = \"An error occurred. Please try again.\";\r\n          }\r\n        }\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .login-container {\r\n    max-width: 400px;\r\n    margin: 0 auto;\r\n    padding: 20px;\r\n    background-color: #f9f9f9;\r\n    border-radius: 8px;\r\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  h2 {\r\n    text-align: center;\r\n  }\r\n  \r\n  div {\r\n    margin-bottom: 15px;\r\n  }\r\n  \r\n  input {\r\n    width: 100%;\r\n    padding: 10px;\r\n    margin-top: 5px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 5px;\r\n  }\r\n  \r\n  button {\r\n    width: 100%;\r\n    padding: 10px;\r\n    background-color: #4CAF50;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  button:hover {\r\n    background-color: #45a049;\r\n  }\r\n  \r\n  .error-message {\r\n    color: red;\r\n    font-size: 14px;\r\n    text-align: center;\r\n  }\r\n  \r\n  .register-container {\r\n    text-align: center;\r\n    margin-top: 15px;\r\n  }\r\n  \r\n  .register-container span {\r\n    margin-right: 5px;\r\n  }\r\n  \r\n  .register-container router-link {\r\n    font-weight: bold;\r\n    color: #4CAF50;\r\n  }\r\n  \r\n  .register-container router-link:hover {\r\n    color: #45a049;\r\n  }\r\n  </style>\r\n  "],"mappings":"AA6BE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAC;QACHC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE;MACZ,CAAC;MACDC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF;QACA,MAAMC,QAAO,GAAI,MAAMR,KAAK,CAACS,IAAI,CAAC,sCAAsC,EAAE,IAAI,CAACP,IAAI,EAAC;UACpFQ,cAAc,EAAC,SAAAA,CAASC,MAAM,EAAC;YAC3BA,MAAK,KAAM,GAAE,IAAKA,MAAK,KAAM,GAAE,IAAKA,MAAK,KAAM,GAAE;UAAW;QAEhE,CAAC,CAAC;;QAEF;QACA,IAAIH,QAAQ,CAACG,MAAK,KAAM,GAAG,EAAE;UAC3BC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEL,QAAQ,CAACP,IAAI,CAACa,KAAK,CAAC;QACxD;MACF,EAAE,OAAOC,KAAK,EAAE;QACd,IAAIA,KAAK,CAACP,QAAQ,EAAE;UAClB;UACA,IAAI,CAACH,YAAW,GAAIU,KAAK,CAACP,QAAQ,CAACP,IAAI,CAACe,OAAO;QACjD,OAAO;UACL,IAAI,CAACX,YAAW,GAAI,sCAAsC;QAC5D;MACF;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}