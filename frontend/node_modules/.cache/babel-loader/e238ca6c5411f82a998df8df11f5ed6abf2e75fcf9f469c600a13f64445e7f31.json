{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      customer_details: [],\n      closed_services: [],\n      alert: '',\n      prof_data: ''\n    };\n  },\n  async mounted() {\n    try {\n      const response = await axios.get('http://localhost:5000/professional_dashboard', {\n        headers: {\n          Authorization: `${localStorage.getItem('authToken')}`\n        }\n      });\n      if (response.status === 200) {\n        this.prof_data = response.data.pro_detail;\n        console.log(this.prof_data);\n      }\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n};","map":{"version":3,"names":["axios","data","customer_details","closed_services","alert","prof_data","mounted","response","get","headers","Authorization","localStorage","getItem","status","pro_detail","console","log","error","message"],"sources":["/home/shrisiitm/MAD 2 Project old/MAD 2 Project/frontend/src/components/ProfessionalHome.vue"],"sourcesContent":["<template>\n    <div class=\"dashboard-container\">\n        <!-- Navbar (Full-width) -->\n        <div class=\"navbar\">\n            <h2>Welcome to Professional Dashboard</h2>\n            <div class=\"navbar-links\">\n                <a href=\"/prof_home\">Home</a>\n                <a href=\"/logout_user\">Logout</a>\n            </div>\n        </div>\n\n        <!-- Wrapper for the main content and professional details -->\n        <div class=\"content-wrapper\">\n            <!-- Main Content Section (Tables) -->\n            <div class=\"main-content\">\n                <div class=\"service-requests\">\n                    <h3 class=\"heading\">Today's Service Request</h3>\n                    <div v-if=\"customer_details.length\">\n                        <table class=\"service-table\">\n                            <thead>\n                                <tr>\n                                    <th>Customer Email</th>\n                                    <th>Customer Name</th>\n                                    <th>Contact No.</th>\n                                    <th>Address</th>\n                                    <th>Scheduled Date</th>\n                                    <th>Action</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr v-for=\"(record, index) in customer_details\" :key=\"index\">\n                                    <td>{{ record.customer_email }}</td>\n                                    <td>{{ record.customer_name }}</td>\n                                    <td>{{ record.contact }}</td>\n                                    <td>{{ record.address }}</td>\n                                    <td>{{ record[1][0].strftime('%d-%m-%Y') }}</td>\n                                    <td>\n                                        <button class=\"action-btn\" :value=\"'Accept' + record[0].email\">Accept</button>\n                                        <button class=\"action-btn\" :value=\"'Dismiss' + record[0].email\">Dismiss</button>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                    <p v-else class=\"message\">No service request received yet</p>\n                </div>\n\n                <p v-if=\"alert\" class=\"alert-message\">{{ alert }}</p>\n\n                <div class=\"closed-services\">\n                    <h3 class=\"heading\">Closed Services</h3>\n                    <div v-if=\"closed_services.length\">\n                        <table class=\"service-table\">\n                            <thead>\n                                <tr>\n                                    <th>Request ID</th>\n                                    <th>Service ID</th>\n                                    <th>Customer ID</th>\n                                    <th>Action</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr v-for=\"(record, index) in closed_services\" :key=\"index\">\n                                    <td>{{ record.request_id }}</td>\n                                    <td>{{ record.service_id }}</td>\n                                    <td>{{ record.customer_id }}</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                    <p v-else class=\"message\">No service closed yet</p>\n                </div>\n            </div>\n\n\n            <div class=\"sidebar\">\n                <div>\n                    <img src=\"/frontend/public/image.png\" alt=\"user-image\">\n                    <h3>Welcome {{ prof_data.name }}</h3>\n                    <table>\n                        <tbody>\n                            <tr>\n                                <td>\n                                    <h4>Your Email:</h4>\n                                </td>\n                                <td><span>{{ prof_data.email }}</span></td>\n                            </tr>\n                            <tr>\n                                <td>\n                                    <h4>Experience:</h4>\n                                </td>\n                                <td><span>{{ prof_data.experience }} Years</span></td>\n                            </tr>\n                            <tr>\n                                <td>\n                                    <h4>Address:</h4>\n                                </td>\n                                <td><span>{{ prof_data.address }}</span></td>\n\n                            </tr>\n                            <tr>\n                                <td>\n                                    <h4>Specialisation:</h4>\n                                </td>\n                                <td><span>{{ prof_data.service_name }}</span></td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport default {\n    data() {\n        return {\n            customer_details: [],\n            closed_services: [],\n            alert: '',\n            prof_data: ''\n        }\n    },\n    async mounted() {\n        try {\n            const response = await axios.get('http://localhost:5000/professional_dashboard', {\n                headers: {\n                    Authorization: `${localStorage.getItem('authToken')}`\n                }\n            });\n\n            if (response.status === 200) {\n                this.prof_data = response.data.pro_detail\n                console.log(this.prof_data)\n            }\n        } catch (error) {\n            console.log(error.message);\n        }\n\n    }\n}\n</script>\n\n<style scoped>\n.dashboard-container {\n    font-family: Arial, sans-serif;\n    padding: 20px;\n}\n\n.navbar {\n    background-color: #2c3e50;\n    color: white;\n    padding: 31px;\n    display: flex;\n    align-items: flex-end;\n    width: 95%;\n    margin-top: -80px;\n    justify-content: space-evenly;\n}\n\n.navbar h2 {\n    font-size: 24px;\n    margin: 0;\n    margin-left: 232px;\n}\n\n.navbar-links a {\n    color: #ecf0f1;\n    text-decoration: none;\n    margin: 0px 31px;\n    font-size: 18px;\n    float: left;\n}\n\n.navbar-links a:hover {\n    color: #3498db;\n}\n\n.content-wrapper {\n    display: flex;\n    /* Flexbox for the two main sections below navbar */\n    gap: 20px;\n    margin-top: 20px;\n}\n\n.main-content {\n    flex: 0 0 80%;\n    /* Main content takes up 80% of the screen */\n}\n\n.sidebar {\n    flex: 0 0 15%;\n    /* Sidebar (professional details) takes up 30% of the screen */\n    background-color: #ecf0f1;\n    padding: 20px;\n    border-radius: 8px;\n    height: 50vh;\n    display: flex;\n    flex-direction: column;\n    /* Ensure content stacks vertically */\n    justify-content: flex-start\n}\n\n.profile-container {\n    margin-top: 30px;\n    text-align: center;\n    margin-bottom: 20px;\n}\n\n.view-profile-btn {\n    background-color: #3498db;\n    color: white;\n    padding: 10px 20px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    font-size: 16px;\n    width: 9%;\n    float: inline-end;\n}\n\n.view-profile-btn:hover {\n    background-color: #2980b9;\n}\n\nspan {\n    margin-left: 10px;\n}\n\n.profile-container:hover .dropdown-content {\n    display: block;\n}\n\n.profile-img {\n    width: 90px;\n    border-radius: 50%;\n    margin-bottom: 10px;\n}\n\n.profile-info {\n    font-size: 20px;\n    font-weight: bold;\n    margin: 10px 0;\n}\n\n.profile-container p {\n    font-size: 16px;\n    margin: 10px 0;\n}\n\n.profile-container span {\n    color: #555;\n    margin-left: 5px;\n}\n\n.edit-profile-btn {\n    background-color: black;\n    color: white;\n    padding: 8px 20px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    font-size: 14px;\n}\n\n.edit-profile-btn:hover {\n    background-color: #444;\n}\n\n.service-requests,\n.closed-services {\n    margin-top: 40px;\n}\n\n.heading {\n    font-size: 22px;\n    margin-bottom: 15px;\n    color: #2c3e50;\n}\n\n.service-table {\n    width: 100%;\n    border-collapse: collapse;\n    margin-top: 20px;\n    border-radius: 10px;\n    overflow: hidden;\n}\n\n.service-table th,\n.service-table td {\n    padding: 12px;\n    text-align: center;\n    border: 1px solid #ddd;\n}\n\n.service-table th {\n    background-color: #34495e;\n    color: white;\n}\n\n.service-table td {\n    background-color: #f9f9f9;\n}\n\n.service-table tr:hover {\n    background-color: #f1f1f1;\n}\n\n.action-btn {\n    background-color: #27ae60;\n    color: white;\n    padding: 8px 16px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    font-size: 14px;\n    margin-right: 10px;\n}\n\n.action-btn:hover {\n    background-color: #2ecc71;\n}\n\n.alert-message {\n    text-align: center;\n    color: red;\n    font-weight: bold;\n    font-size: 18px;\n}\n\n.message {\n    text-align: center;\n    color: #7f8c8d;\n    font-size: 16px;\n    font-weight: bold;\n}\n</style>\n"],"mappings":"AAoHA,OAAOA,KAAI,MAAO,OAAO;AACzB,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,gBAAgB,EAAE,EAAE;MACpBC,eAAe,EAAE,EAAE;MACnBC,KAAK,EAAE,EAAE;MACTC,SAAS,EAAE;IACf;EACJ,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACZ,IAAI;MACA,MAAMC,QAAO,GAAI,MAAMP,KAAK,CAACQ,GAAG,CAAC,8CAA8C,EAAE;QAC7EC,OAAO,EAAE;UACLC,aAAa,EAAE,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;QACvD;MACJ,CAAC,CAAC;MAEF,IAAIL,QAAQ,CAACM,MAAK,KAAM,GAAG,EAAE;QACzB,IAAI,CAACR,SAAQ,GAAIE,QAAQ,CAACN,IAAI,CAACa,UAAS;QACxCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACX,SAAS;MAC9B;IACJ,EAAE,OAAOY,KAAK,EAAE;MACZF,OAAO,CAACC,GAAG,CAACC,KAAK,CAACC,OAAO,CAAC;IAC9B;EAEJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}