{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"customer-dashboard\"\n};\nconst _hoisted_2 = {\n  class: \"navbar\"\n};\nconst _hoisted_3 = {\n  class: \"nav-links\"\n};\nconst _hoisted_4 = {\n  class: \"profile\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"dropdown-profile-content\"\n};\nconst _hoisted_6 = {\n  class: \"profile-table\"\n};\nconst _hoisted_7 = {\n  style: {\n    \"font-size\": \"30px\",\n    \"font-family\": \"monospace\"\n  }\n};\nconst _hoisted_8 = {\n  class: \"table\"\n};\nconst _hoisted_9 = {\n  key: 0\n};\nconst _hoisted_10 = {\n  key: 0\n};\nconst _hoisted_11 = [\"onClick\"];\nconst _hoisted_12 = {\n  key: 1\n};\nconst _hoisted_13 = [\"onUpdate:modelValue\"];\nconst _hoisted_14 = [\"onClick\"];\nconst _hoisted_15 = [\"onClick\"];\nconst _hoisted_16 = [\"onClick\"];\nconst _hoisted_17 = [\"onClick\"];\nconst _hoisted_18 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[4] || (_cache[4] = _createElementVNode(\"h1\", null, \"Welcome to Customer Dashboard\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_router_link, {\n    to: {\n      name: 'HomePage'\n    },\n    onClick: $options.logoutuser\n  }, {\n    default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\"Logout\")])),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _cache[2] || (_cache[2] = _createElementVNode(\"a\", {\n    href: \"/customer_search\"\n  }, \"Search\", -1 /* HOISTED */)), _cache[3] || (_cache[3] = _createElementVNode(\"a\", {\n    href: \"#\"\n  }, \"Home\", -1 /* HOISTED */))])]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"button\", {\n    class: \"prof-button\",\n    style: {\n      \"background-color\": \"black\"\n    },\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.toggleProfileDropdown && $options.toggleProfileDropdown(...args))\n  }, \" View Profile \"), _cache[10] || (_cache[10] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _cache[11] || (_cache[11] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), $data.isProfileDropdownVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_cache[9] || (_cache[9] = _createElementVNode(\"img\", {\n    style: {\n      \"width\": \"100px\",\n      \"border-radius\": \"116px\"\n    },\n    src: \"https://img.freepik.com/premium-vector/silver-membership-icon-default-avatar-profile-icon-membership-icon-social-media-user-image-vector-illustration_561158-4195.jpg?semt=ais_hybrid\",\n    alt: \"user-image\"\n  }, null, -1 /* HOISTED */)), _createElementVNode(\"h3\", null, \"Hello \" + _toDisplayString($data.profile.name), 1 /* TEXT */), _createElementVNode(\"table\", _hoisted_6, [_createElementVNode(\"tbody\", null, [_createElementVNode(\"tr\", null, [_cache[5] || (_cache[5] = _createElementVNode(\"td\", null, [_createElementVNode(\"h3\", null, \"Your Email:\")], -1 /* HOISTED */)), _createElementVNode(\"td\", null, [_createElementVNode(\"span\", null, _toDisplayString($data.profile.email), 1 /* TEXT */)])]), _createElementVNode(\"tr\", null, [_cache[6] || (_cache[6] = _createElementVNode(\"td\", null, [_createElementVNode(\"h3\", null, \"Phone: \")], -1 /* HOISTED */)), _createElementVNode(\"td\", null, [_createElementVNode(\"span\", null, _toDisplayString($data.profile.contact), 1 /* TEXT */)])]), _createElementVNode(\"tr\", null, [_cache[7] || (_cache[7] = _createElementVNode(\"td\", null, [_createElementVNode(\"h3\", null, \"Address: \")], -1 /* HOISTED */)), _createElementVNode(\"td\", null, [_createElementVNode(\"span\", null, _toDisplayString($data.profile.address), 1 /* TEXT */)])]), _createElementVNode(\"tr\", null, [_cache[8] || (_cache[8] = _createElementVNode(\"td\", null, [_createElementVNode(\"h3\", null, \"Pincode: \")], -1 /* HOISTED */)), _createElementVNode(\"td\", null, [_createElementVNode(\"span\", null, _toDisplayString($data.profile.pincode), 1 /* TEXT */)])])])])])) : _createCommentVNode(\"v-if\", true)]), _cache[14] || (_cache[14] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createElementVNode(\"h2\", _hoisted_7, \"Hello, \" + _toDisplayString($data.profile.name), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_8, [_cache[13] || (_cache[13] = _createElementVNode(\"p\", {\n    class: \"request-title\"\n  }, \"Requested Services: \", -1 /* HOISTED */)), $data.serviceRequests.length > 0 ? (_openBlock(), _createElementBlock(\"table\", _hoisted_9, [_cache[12] || (_cache[12] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Request ID\"), _createElementVNode(\"th\", null, \"Service Name\"), _createElementVNode(\"th\", null, \"Professional ID\"), _createElementVNode(\"th\", null, \"Request Date\"), _createElementVNode(\"th\", null, \"Scheduled Date\"), _createElementVNode(\"th\", null, \"Closed Date\"), _createElementVNode(\"th\", null, \"Status\"), _createElementVNode(\"th\", null, \"Action\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.serviceRequests, record => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: record.request_id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(record.request_id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(record.service_name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(record.pro_email), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatDate(record.request_date)), 1 /* TEXT */), _createCommentVNode(\" Editable Scheduled Date \"), _createElementVNode(\"td\", null, [!record.isEditing ? (_openBlock(), _createElementBlock(\"span\", _hoisted_10, [_createTextVNode(_toDisplayString($options.formatDate(record.schedule_date)) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.editSchedule(record),\n      class: \"edit-button\"\n    }, \"Edit\", 8 /* PROPS */, _hoisted_11)])) : (_openBlock(), _createElementBlock(\"span\", _hoisted_12, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"date\",\n      \"onUpdate:modelValue\": $event => record.editedDate = $event\n    }, null, 8 /* PROPS */, _hoisted_13), [[_vModelText, record.editedDate]]), _createElementVNode(\"button\", {\n      onClick: $event => $options.saveSchedule(record),\n      class: \"save-button\"\n    }, \"Save\", 8 /* PROPS */, _hoisted_14), _createElementVNode(\"button\", {\n      onClick: $event => $options.cancelEdit(record),\n      class: \"cancel-button\"\n    }, \"Cancel\", 8 /* PROPS */, _hoisted_15)]))]), _createElementVNode(\"td\", null, _toDisplayString(record.close_date ? $options.formatDate(record.close_date) : 'Closing Date Pending'), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(record.status), 1 /* TEXT */), _createElementVNode(\"td\", null, [record.status === 'Requested' ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      onClick: $event => _ctx.handleAction(record, 'close')\n    }, \"Close\", 8 /* PROPS */, _hoisted_16)) : _createCommentVNode(\"v-if\", true), record.status !== 'Closed by customer' ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 1,\n      onClick: $event => $options.cancelRequest(record),\n      class: \"delete-button\"\n    }, \"Cancel\", 8 /* PROPS */, _hoisted_17)) : _createCommentVNode(\"v-if\", true)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_18, \"Your service request is empty\"))])]);\n}","map":{"version":3,"names":["class","key","style","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_createVNode","_component_router_link","to","name","onClick","$options","logoutuser","default","_withCtx","_cache","_createTextVNode","_","href","_hoisted_4","args","toggleProfileDropdown","$data","isProfileDropdownVisible","_hoisted_5","src","alt","_toDisplayString","profile","_hoisted_6","email","contact","address","pincode","_createCommentVNode","_hoisted_7","_hoisted_8","serviceRequests","length","_hoisted_9","_Fragment","_renderList","record","request_id","service_name","pro_email","formatDate","request_date","isEditing","_hoisted_10","schedule_date","$event","editSchedule","_hoisted_11","_hoisted_12","type","editedDate","_hoisted_13","saveSchedule","_hoisted_14","cancelEdit","_hoisted_15","close_date","status","_ctx","handleAction","_hoisted_16","cancelRequest","_hoisted_17","_hoisted_18"],"sources":["/home/shrisiitm/MAD 2 Project old/MAD 2 Project/frontend/src/components/CustomerHome.vue"],"sourcesContent":["<!-- <template>\n  <div class=\"customer-dashboard\">\n    <div class=\"navbar\">\n      <h1>Welcome to Customer Dashboard</h1>\n      <div class=\"nav-links\">\n        <router-link :to=\"{ name: 'HomePage' }\" @click=\"logoutuser\">Logout</router-link>\n        <a href=\"/customer_search\">Search</a>\n        <a href=\"#\">Home</a>\n      </div>\n    </div>\n\n    <div class=\"profile\">\n      <button class=\"prof-button\" style=\"background-color:black;\" @click=\"toggleProfileDropdown\">View\n        Profile</button><br><br>\n      <div v-if=\"isProfileDropdownVisible\" class=\"dropdown-profile-content\">\n        <img style=\"width:100px; border-radius:116px;\"\n          src=\"https://img.freepik.com/premium-vector/silver-membership-icon-default-avatar-profile-icon-membership-icon-social-media-user-image-vector-illustration_561158-4195.jpg?semt=ais_hybrid\"\n          alt=\"user-image\">\n        <h3>Hello {{ profile.name }}</h3>\n        <table class=\"profile-table\">\n          <tbody>\n            <tr>\n              <td>\n                <h3>Your Email:</h3>\n              </td>\n              <td><span>{{ profile.email }}</span></td>\n            </tr>\n\n            <tr>\n              <td>\n                <h3>Phone: </h3>\n              </td>\n              <td><span>{{ profile.contact }}</span></td>\n            </tr>\n\n            <tr>\n              <td>\n                <h3>Address: </h3>\n              </td>\n              <td><span>{{ profile.address }}</span></td>\n            </tr>\n\n            <tr>\n              <td>\n                <h3>Pincode: </h3>\n              </td>\n              <td><span>{{ profile.pincode }}</span></td>\n            </tr>\n\n          </tbody>\n        </table>\n      </div>\n    </div><br>\n\n    <h2 style=\"font-size:30px; font-family:monospace;\">Hello, {{ profile.name }}</h2>\n\n    <div class=\"services\">\n      <h3 style=\"font-size:20px; font-family:monospace; margin-bottom:35px;\">Looking for which service category?</h3>\n      <div class=\"service-categories\">\n        <div class=\"service-categories\">\n          <div class=\"dropdown\">\n            <button>Cleaning</button>\n            <div class=\"dropdown-content\">\n              <table v-if=\"cleaningServices.length > 0\">\n                <tr v-for=\"service in cleaningServices\" :key=\"service.service_id\">\n                  <td>{{ service.service_name }}</td>\n                  <td>{{ service.description }}</td>\n                  <td>Rs. {{ service.price }}</td>\n                  <td><button class=\"book\" @click=\"bookService(service)\" type=\"submit\">Book</button></td>\n                </tr>\n              </table>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"service-categories\">\n          <div class=\"dropdown\">\n            <button>Health & Wellness</button>\n            <div class=\"dropdown-content\">\n              <table v-if=\"healthServices.length > 0\">\n                <tr v-for=\"service in healthServices\" :key=\"service.service_id\">\n                  <td>{{ service.service_name }}</td>\n                  <td>{{ service.description }}</td>\n                  <td>Rs. {{ service.price }}</td>\n                  <td><button class=\"book\" @click=\"bookService(service)\" type=\"submit\">Book</button></td>\n                </tr>\n              </table>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"service-categories\">\n          <div class=\"dropdown\">\n            <button>Saloon</button>\n            <div class=\"dropdown-content\">\n              <table v-if=\"saloonServices.length > 0\">\n                <tr v-for=\"service in saloonServices\" :key=\"service.service_id\">\n                  <td>{{ service.service_name }}</td>\n                  <td>{{ service.description }}</td>\n                  <td>Rs. {{ service.price }}</td>\n                  <td><button class=\"book\" @click=\"bookService(service)\" type=\"submit\">Book</button></td>\n                </tr>\n              </table>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"service-categories\">\n          <div class=\"dropdown\">\n            <button>Home Decoration</button>\n            <div class=\"dropdown-content\">\n              <table v-if=\"homedecorServices.length > 0\">\n                <tr v-for=\"service in hServices\" :key=\"service.service_id\">\n                  <td>{{ service.service_name }}</td>\n                  <td>{{ service.description }}</td>\n                  <td>Rs. {{ service.price }}</td>\n                  <td><button class=\"book\" @click=\"bookService(service)\" type=\"submit\">Book</button></td>\n                </tr>\n              </table>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"service-categories\">\n          <div class=\"dropdown\">\n            <button>Electrician</button>\n            <div class=\"dropdown-content\">\n              <table v-if=\"electricianServices.length > 0\">\n                <tr v-for=\"service in electricianServices\" :key=\"service.service_id\">\n                  <td>{{ service.service_name }}</td>\n                  <td>{{ service.description }}</td>\n                  <td>Rs. {{ service.price }}</td>\n                  <td><button class=\"book\" @click=\"bookService(service)\">Book</button></td>\n                </tr>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <p v-if=\"alert\" class=\"alert\">{{ alert }}</p>\n\n    <div class=\"table\">\n      <p class=\"request-title\">Requested Services: </p>\n      <table v-if=\"serviceRequests.length > 0\">\n        <thead>\n          <tr>\n            <th>Request ID</th>\n            <th>Service Name</th>\n            <th>Professional ID</th>\n            <th>Request Date</th>\n            <th>Scheduled Date</th>\n            <th>Closed Date</th>\n            <th>Status</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"record in serviceRequests\" :key=\"record.request_id\">\n            <td>{{ record.request_id }}</td>\n            <td>{{ record.service_name }}</td>\n            <td>{{ record.pro_email }}</td>\n            <td>{{ formatDate(record.request_date) }}</td>\n            <td>{{ formatDate(record.schedule_date) }}</td>\n            <td>{{ record.close_date ? formatDate(record.close_date) : 'Closing Date Pending' }}</td>\n            <td>{{ record.status }}</td>\n            <td>\n              <button style=\"width:72px;\" v-if=\"record.status === 'Requested'\" @click=\"handleAction(record, 'close')\">Close it?</button>\n              <button style=\"width:97px; margin:0 14px; background-color: cornflowerblue;\" v-if=\"record.status === 'Requested'\" @click=\"handleAction(record, 'edit')\">Edit Request</button>\n              <button style=\"width:60px;\" v-if=\"record.status === 'Requested' || record.status !== 'Closed by customer'\" @click=\"cancelRequest(record)\"\n                class=\"delete-button\">Cancel</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <p v-else>Your service request is empty</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\naxios.default.baseURL = 'http://loaclhost:5000';\n\nexport default {\n  data() {\n    return {\n      profile: '',\n      alert: '',\n      services: [],\n      serviceRequests: [],\n      isProfileDropdownVisible: false,\n    };\n  },\n  methods: {\n    toggleProfileDropdown() {\n      this.isProfileDropdownVisible = !this.isProfileDropdownVisible;\n    },\n\n    logoutuser() {\n      localStorage.removeItem('authToken')\n    },\n\n    async handleAction(record, action){\n      try{\n        if(action == 'close'){\n          const close = await axios.put(`/close_edit_request/close/${record.request_id}`,{},{\n            headers:{\n              Authorization:`${localStorage.getItem('authToken')}`\n            }\n          })\n\n          if (close.status === 200) {\n            const updatedRequest = this.serviceRequests.find(request => request.request_id === record.request_id);\n            updatedRequest.status = 'Closed by customer';\n            updatedRequest.close_date = new Date().toLocaleDateString('en',{year:'numeric', month:'long', day:'numeric'})\n          }\n          \n        }\n\n\n        if(action == 'edit'){\n          const edit = await axios.put(`/close_edit_request/edit/${record.request_id}`,{\n            headers:{\n              Authorization:`${localStorage.getItem('authToken')}`\n            }\n          })\n          \n        }\n      }\n      catch(error){\n        console.log(error)\n      }\n    },\n\n    async bookService(service) {\n      try {\n        const response = await axios.post('/request_service', { \"service_id\": service.service_id, \"service_name\": service.service_name },\n          {\n            headers: {\n              Authorization: `${localStorage.getItem('authToken')}`\n            }\n          })\n        if (response.status === 200) {\n          this.serviceRequests.push(\n            {\n              request_id: response.data.request_id,\n              service_name: service.service_name,\n              pro_email: response.data.pro_email,\n              status: response.data.status,\n              closed_date: response.data.closed_date,\n              request_date: response.data.request_date,\n              schedule_date: response.data.schedule_date\n            }\n          )\n        }\n      }\n      catch (error) {\n        if (error.response.status === 404 || error.response.status === 400) {\n          this.alert = error.response.data.message;\n          setTimeout(() => {\n            this.alert = ''\n          }, 2000\n          )\n        }\n      }\n    },\n    formatDate(date) {\n      const option = { year: 'numeric', month: 'long', day: 'numeric' };\n      return new Date(date).toLocaleDateString('en', option);\n    },\n    async cancelRequest(record){\n      try {\n        const response = await axios.delete(`/cancel_request/${record.request_id}`,\n          {\n            headers: {\n              Authorization: `${localStorage.getItem('authToken')}`\n            }\n          })\n        if (response.status === 200) {\n          this.serviceRequests = this.serviceRequests.filter(request => request.request_id !== record.request_id);\n        }\n      }\n      catch (error) {\n        if(error.response.status === 404){\n          this.alert = error.response.message\n          setTimeout(()=>{\n            this.alert=''\n          },3000)\n        }\n      }\n    }\n  },\n\n  computed: {\n    cleaningServices() {\n      return this.services.filter(service => service.service_category === 'Cleaning');\n    },\n    healthServices() {\n      return this.services.filter(service => service.service_category === 'Health and Wellness')\n    },\n    saloonServices() {\n      return this.services.filter(service => service.service_category === 'Saloon')\n    },\n    electricianServices() {\n      return this.services.filter(service => service.service_category === 'Electrician')\n    },\n    homedecorServices() {\n      return this.services.filter(service => service.service_category === 'Home Decoration')\n    },\n\n  },\n  async mounted() {\n    try {\n      const response = await axios.get('http://localhost:5000/customer_dashboard', {\n        headers: {\n          Authorization: `${localStorage.getItem('authToken')}`\n        }\n      });\n\n      if (response.status === 200) {\n        this.profile = response.data.profile;\n        this.services = response.data.services;\n        this.serviceRequests = response.data.service_req;\n        console.log(this.serviceRequests)\n      }\n    }\n    catch (error) {\n      if (error.response.status === 401) {\n        this.$router.push({ name: 'CustomerLogin', query: { 'message': \"Please login to continue\" } });\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.customer-dashboard {\n  font-family: 'Arial', sans-serif;\n  padding: 20px;\n}\n\n.navbar {\n  background-color: #333;\n  color: white;\n  padding: 10px;\n  margin-top: -80px;\n}\n\n.navbar h1 {\n  font-size: 210%;\n}\n\n.nav-links a {\n  margin-left: 15px;\n  text-decoration: none;\n  color: #f0f0f0;\n  font-size: 19px;\n}\n\n.profile-table tbody tr td {\n  padding-top: 0px;\n  padding-bottom: 0px;\n\n}\n\n.profile {\n  position: relative;\n  margin-top: 20px;\n  z-index: 1;\n}\n\n.prof-button {\n  padding: 10px 20px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  width: 8%;\n  float: right;\n  z-index: 2;\n}\n\n.prof-button:hover {\n  background-color: #45a049;\n}\n\n.dropdown-profile-content {\n  position: absolute;\n  top: 50px;\n  right: 0;\n  background-color: beige;\n  width: 323px;\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  padding: 9px;\n  z-index: 1000;\n}\n\n.services {\n  margin-top: 30px;\n  margin-bottom: 70px;\n}\n\n.dropdown-content button.book {\n  width: 85px;\n  height: 40px;\n  font-size: 17px;\n  padding: 12px;\n  background-color: #1ed3cd;\n  color: white;\n  border: none;\n  cursor: pointer;\n  border-radius: 5px;\n}\n\n.service-categories {\n  display: flex;\n  gap: 56px;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n}\n\n.dropdown {\n  position: relative;\n}\n\n.dropdown button {\n  padding: 22px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  cursor: pointer;\n  border-radius: 5px;\n  font-size: 18px;\n  width: 191px;\n}\n\n.dropdown button:hover {\n  background-color: #45a049;\n}\n\n.dropdown-content {\n  display: none;\n  position: absolute;\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  padding: 15px;\n  width: 100%;\n}\n\n.dropdown:hover .dropdown-content {\n  display: table;\n}\n\n.btn {\n  padding: 10px 20px;\n  background-color: #2196F3;\n  color: white;\n  border: none;\n  border-radius: 5px;\n}\n\n.btn:hover {\n  background-color: #1976D2;\n}\n\n.request-title {\n  font-size: 1.5em;\n}\n\n.table table {\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 20px;\n}\n\n.table th,\n.table td {\n  padding: 7px;\n  border: 1px solid #ddd;\n  text-align: left;\n}\n\n.delete-button {\n  background-color: #f44336;\n  color: white;\n}\n\n.delete-button:hover {\n  background-color: #e53935;\n}\n\n.alert {\n  text-align: center;\n  color: red;\n  font-size: 1.2em;\n  margin-top: 20px;\n}\n\ntd {\n  padding: 13px;\n}\n</style> -->\n\n\n<template>\n  <div class=\"customer-dashboard\">\n    <div class=\"navbar\">\n      <h1>Welcome to Customer Dashboard</h1>\n      <div class=\"nav-links\">\n        <router-link :to=\"{ name: 'HomePage' }\" @click=\"logoutuser\">Logout</router-link>\n        <a href=\"/customer_search\">Search</a>\n        <a href=\"#\">Home</a>\n      </div>\n    </div>\n\n    <div class=\"profile\">\n      <button class=\"prof-button\" style=\"background-color:black;\" @click=\"toggleProfileDropdown\">\n        View Profile\n      </button><br><br>\n      <div v-if=\"isProfileDropdownVisible\" class=\"dropdown-profile-content\">\n        <img style=\"width:100px; border-radius:116px;\"\n          src=\"https://img.freepik.com/premium-vector/silver-membership-icon-default-avatar-profile-icon-membership-icon-social-media-user-image-vector-illustration_561158-4195.jpg?semt=ais_hybrid\"\n          alt=\"user-image\">\n        <h3>Hello {{ profile.name }}</h3>\n        <table class=\"profile-table\">\n          <tbody>\n            <tr><td><h3>Your Email:</h3></td><td><span>{{ profile.email }}</span></td></tr>\n            <tr><td><h3>Phone: </h3></td><td><span>{{ profile.contact }}</span></td></tr>\n            <tr><td><h3>Address: </h3></td><td><span>{{ profile.address }}</span></td></tr>\n            <tr><td><h3>Pincode: </h3></td><td><span>{{ profile.pincode }}</span></td></tr>\n          </tbody>\n        </table>\n      </div>\n    </div><br>\n\n    <h2 style=\"font-size:30px; font-family:monospace;\">Hello, {{ profile.name }}</h2>\n\n    <div class=\"table\">\n      <p class=\"request-title\">Requested Services: </p>\n      <table v-if=\"serviceRequests.length > 0\">\n        <thead>\n          <tr>\n            <th>Request ID</th>\n            <th>Service Name</th>\n            <th>Professional ID</th>\n            <th>Request Date</th>\n            <th>Scheduled Date</th>\n            <th>Closed Date</th>\n            <th>Status</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"record in serviceRequests\" :key=\"record.request_id\">\n            <td>{{ record.request_id }}</td>\n            <td>{{ record.service_name }}</td>\n            <td>{{ record.pro_email }}</td>\n            <td>{{ formatDate(record.request_date) }}</td>\n\n            <!-- Editable Scheduled Date -->\n            <td>\n              <span v-if=\"!record.isEditing\">\n                {{ formatDate(record.schedule_date) }}\n                <button @click=\"editSchedule(record)\" class=\"edit-button\">Edit</button>\n              </span>\n              <span v-else>\n                <input type=\"date\" v-model=\"record.editedDate\" />\n                <button @click=\"saveSchedule(record)\" class=\"save-button\">Save</button>\n                <button @click=\"cancelEdit(record)\" class=\"cancel-button\">Cancel</button>\n              </span>\n            </td>\n\n            <td>{{ record.close_date ? formatDate(record.close_date) : 'Closing Date Pending' }}</td>\n            <td>{{ record.status }}</td>\n            <td>\n              <button v-if=\"record.status === 'Requested'\" @click=\"handleAction(record, 'close')\">Close</button>\n              <button v-if=\"record.status !== 'Closed by customer'\" @click=\"cancelRequest(record)\" class=\"delete-button\">Cancel</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <p v-else>Your service request is empty</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\naxios.default.baseURL = 'http://localhost:5000';\n\nexport default {\n  data() {\n    return {\n      profile: '',\n      alert: '',\n      services: [],\n      serviceRequests: [],\n      isProfileDropdownVisible: false,\n    };\n  },\n  methods: {\n    toggleProfileDropdown() {\n      this.isProfileDropdownVisible = !this.isProfileDropdownVisible;\n    },\n\n    logoutuser() {\n      localStorage.removeItem('authToken');\n    },\n\n    editSchedule(record) {\n      // Enable editing mode\n      record.isEditing = true;\n      record.editedDate = record.schedule_date; // Default value\n    },\n\n    async saveSchedule(record) {\n      if (!record.editedDate) {\n        alert(\"Please select a date.\");\n        return;\n      }\n\n      try {\n        const response = await axios.put(`/update_schedule/${record.request_id}`, \n          { schedule_date: record.editedDate },\n          {\n            headers: {\n              Authorization: `${localStorage.getItem('authToken')}`\n            }\n          }\n        );\n\n        if (response.status === 200) {\n          record.schedule_date = record.editedDate; // Update in UI\n          record.isEditing = false; // Exit edit mode\n        }\n      } catch (error) {\n        console.error(error);\n        alert(\"Error updating schedule date.\");\n      }\n    },\n\n    cancelEdit(record) {\n      record.isEditing = false;\n      record.editedDate = \"\";\n    },\n\n    async cancelRequest(record) {\n      try {\n        const response = await axios.delete(`/cancel_request/${record.request_id}`, {\n          headers: {\n            Authorization: `${localStorage.getItem('authToken')}`\n          }\n        });\n\n        if (response.status === 200) {\n          this.serviceRequests = this.serviceRequests.filter(request => request.request_id !== record.request_id);\n        }\n      } catch (error) {\n        if (error.response.status === 404) {\n          this.alert = error.response.message;\n          setTimeout(() => {\n            this.alert = '';\n          }, 3000);\n        }\n      }\n    },\n\n    formatDate(date) {\n      const option = { year: 'numeric', month: 'long', day: 'numeric' };\n      return new Date(date).toLocaleDateString('en', option);\n    }\n  },\n\n  async mounted() {\n    try {\n      const response = await axios.get('http://localhost:5000/customer_dashboard', {\n        headers: {\n          Authorization: `${localStorage.getItem('authToken')}`\n        }\n      });\n\n      if (response.status === 200) {\n        this.profile = response.data.profile;\n        this.services = response.data.services;\n        this.serviceRequests = response.data.service_req;\n      }\n    } catch (error) {\n      if (error.response.status === 401) {\n        this.$router.push({ name: 'CustomerLogin', query: { 'message': \"Please login to continue\" } });\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.edit-button {\n  background-color: #2196F3;\n  color: white;\n  border: none;\n  padding: 5px 10px;\n  cursor: pointer;\n  margin-left: 5px;\n}\n\n.save-button {\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  padding: 5px 10px;\n  cursor: pointer;\n  margin-right: 5px;\n}\n\n.cancel-button {\n  background-color: #f44336;\n  color: white;\n  border: none;\n  padding: 5px 10px;\n  cursor: pointer;\n}\n</style>\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}