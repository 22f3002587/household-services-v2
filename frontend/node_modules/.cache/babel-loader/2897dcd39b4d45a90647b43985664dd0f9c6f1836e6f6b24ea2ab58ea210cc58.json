{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nexport default {\n  data() {\n    return {\n      user_data: {\n        fullname: \"John Doe\",\n        email: \"johndoe@example.com\",\n        experience: \"5 years\",\n        specialisation: \"Plumbing\",\n        adminApproval: true\n      },\n      serviceCategories: [\"Cleaning\", \"Home Decoration\", \"Health & Wellness\", \"Saloon\", \"Electrician\"],\n      services: [],\n      // Array of service objects fetched from API or mock data\n      serviceRequests: [],\n      // Array of customer service requests\n      alert: \"\" // Dynamic alert message\n    };\n  },\n  methods: {\n    filterServicesByCategory(category) {\n      return this.services.filter(service => service.service_category === category);\n    },\n    bookService(service) {\n      // Logic to book the service, usually a POST request to the server\n      console.log(`Booking service: ${service.service_name}`);\n    },\n    closeRequest(request_id) {\n      // Logic to close the request\n      console.log(`Closing request: ${request_id}`);\n    },\n    editRequest(request_id) {\n      // Logic to edit the request\n      console.log(`Editing request: ${request_id}`);\n    },\n    deleteRequest(request_id) {\n      // Logic to delete the request\n      console.log(`Deleting request: ${request_id}`);\n    },\n    formatDate(date) {\n      // Format the date (if any)\n      const options = {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\"\n      };\n      return new Date(date).toLocaleDateString(undefined, options);\n    }\n  }\n};","map":{"version":3,"names":["data","user_data","fullname","email","experience","specialisation","adminApproval","serviceCategories","services","serviceRequests","alert","methods","filterServicesByCategory","category","filter","service","service_category","bookService","console","log","service_name","closeRequest","request_id","editRequest","deleteRequest","formatDate","date","options","year","month","day","Date","toLocaleDateString","undefined"],"sources":["/home/shrisiitm/MAD 2 Project old/MAD 2 Project/frontend/src/components/CustomerHome.vue"],"sourcesContent":["<template>\n  <div class=\"dashboard-container\">\n    <!-- Navbar -->\n    <nav class=\"navbar\">\n      <h1>Welcome to Customer Dashboard</h1>\n      <div class=\"navbar-links\">\n        <a href=\"/logout_user\">Logout</a>\n        <a href=\"/customer_search\">Search</a>\n        <a href=\"#\">Home</a>\n      </div>\n    </nav>\n\n    <!-- Profile Section -->\n    <div class=\"profile\">\n      <button class=\"prof-button\">View Profile</button>\n      <div class=\"dropdown-profile-content\">\n        <img src=\"/static/image.png\" alt=\"user-image\" />\n        <h3 class=\"profile-name\">Hello</h3>\n        <h3>Your Email: <span>{{ user_data.email }}</span></h3>\n        <h3>Experience: <span>{{ user_data.experience }}</span></h3>\n        <h3>Specialisation: <span>{{ user_data.specialisation }}</span></h3>\n        <h3>Admin Approval: <span>{{ user_data.adminApproval ? 'Approved' : 'Pending' }}</span></h3>\n      </div>\n    </div>\n\n    <!-- Greeting -->\n    <h2>Hello, {{ user_data.fullname }}</h2>\n\n    <!-- Service Category Section -->\n    <div class=\"services\">\n      <h3>Looking for which service category?</h3>\n\n      <!-- Dynamic Service Categories -->\n      <div v-for=\"category in serviceCategories\" :key=\"category\">\n        <div class=\"dropdown\">\n          <button>{{ category }}</button>\n          <div class=\"dropdown-content\">\n            <table v-if=\"services.length > 0\">\n              <tr v-for=\"service in filterServicesByCategory(category)\" :key=\"service.service_id\">\n                <td>{{ service.service_name }}</td>\n                <td>{{ service.description }}</td>\n                <td>Rs. {{ service.base_price }}</td>\n                <td>\n                  <form @submit.prevent=\"bookService(service)\">\n                    <input type=\"hidden\" :value=\"service.service_id\" />\n                    <input type=\"hidden\" :value=\"user_data.email\" />\n                    <button class=\"btn\" type=\"submit\">Book</button>\n                  </form>\n                </td>\n              </tr>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Service Request Table -->\n    <div class=\"service-requests\">\n      <p>Requested Services:</p>\n      <table v-if=\"serviceRequests.length > 0\">\n        <thead>\n          <tr>\n            <th>Request ID</th>\n            <th>Service Name</th>\n            <th>Professional ID</th>\n            <th>Request Date</th>\n            <th>Scheduled Date</th>\n            <th>Closed Date</th>\n            <th>Status</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"request in serviceRequests\" :key=\"request.request_id\">\n            <td>{{ request.request_id }}</td>\n            <td>{{ request.service_name }}</td>\n            <td>{{ request.professional_id }}</td>\n            <td>{{ formatDate(request.requested_date) }}</td>\n            <td>{{ formatDate(request.scheduled_date) }}</td>\n            <td>{{ request.closed_date ? formatDate(request.closed_date) : 'Pending' }}</td>\n            <td>{{ request.status }}</td>\n            <td>\n              <div v-if=\"request.status === 'Requested'\">\n                <button class=\"close\" @click=\"closeRequest(request.request_id)\">Close</button>\n                <button class=\"edit\" @click=\"editRequest(request.request_id)\">Edit Request</button>\n                <button class=\"delete\" @click=\"deleteRequest(request.request_id)\">Delete</button>\n              </div>\n              <div v-if=\"request.status === 'Closed by customer' || request.status === 'Professional Accepted'\">\n                <button class=\"close\" @click=\"closeRequest(request.request_id)\">Close</button>\n                <button class=\"delete\" @click=\"deleteRequest(request.request_id)\">Delete</button>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <p v-else>Your service request is empty.</p>\n    </div>\n\n    <!-- Alerts -->\n    <p class=\"alert\" v-if=\"alert\">{{ alert }}</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      user_data: {\n        fullname: \"John Doe\",\n        email: \"johndoe@example.com\",\n        experience: \"5 years\",\n        specialisation: \"Plumbing\",\n        adminApproval: true,\n      },\n      serviceCategories: [\"Cleaning\", \"Home Decoration\", \"Health & Wellness\", \"Saloon\", \"Electrician\"],\n      services: [], // Array of service objects fetched from API or mock data\n      serviceRequests: [], // Array of customer service requests\n      alert: \"\", // Dynamic alert message\n    };\n  },\n  methods: {\n    filterServicesByCategory(category) {\n      return this.services.filter((service) => service.service_category === category);\n    },\n    bookService(service) {\n      // Logic to book the service, usually a POST request to the server\n      console.log(`Booking service: ${service.service_name}`);\n    },\n    closeRequest(request_id) {\n      // Logic to close the request\n      console.log(`Closing request: ${request_id}`);\n    },\n    editRequest(request_id) {\n      // Logic to edit the request\n      console.log(`Editing request: ${request_id}`);\n    },\n    deleteRequest(request_id) {\n      // Logic to delete the request\n      console.log(`Deleting request: ${request_id}`);\n    },\n    formatDate(date) {\n      // Format the date (if any)\n      const options = { year: \"numeric\", month: \"short\", day: \"numeric\" };\n      return new Date(date).toLocaleDateString(undefined, options);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.dashboard-container {\n  font-family: Arial, sans-serif;\n  padding: 20px;\n}\n\n.navbar {\n  background-color: black;\n  color: white;\n  padding: 10px;\n}\n\n.navbar h1 {\n  margin: 0;\n}\n\n.navbar-links {\n  text-align: right;\n}\n\n.navbar-links a {\n  color: white;\n  margin: 0 10px;\n  text-decoration: none;\n}\n\n.profile {\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 20px;\n}\n\n.prof-button {\n  padding: 10px;\n  cursor: pointer;\n  border: 2px solid blue;\n  background-color: lightseagreen;\n  border-radius: 8px;\n  font-size: 16px;\n}\n\n.dropdown-profile-content {\n  display: none;\n  position: absolute;\n  background-color: #f4f4f4;\n  padding: 15px;\n  border-radius: 8px;\n  box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.1);\n  top: 50px;\n  right: 0;\n  width: 250px;\n}\n\n.profile:hover .dropdown-profile-content {\n  display: block;\n}\n\n.profile-name {\n  text-align: center;\n  font-size: 18px;\n}\n\n.services {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  margin-top: 20px;\n}\n\n.dropdown {\n  width: 200px;\n}\n\nbutton {\n  padding: 10px;\n  cursor: pointer;\n  border-radius: 6px;\n  background-color: lightblue;\n  border: 2px solid #3b8d99;\n}\n\nbutton:hover {\n  background-color: #afdd5f;\n}\n\ntable {\n  width: 100%;\n  margin-top: 10px;\n  border-collapse: collapse;\n}\n\nth,\ntd {\n  border: 1px solid #ddd;\n  padding: 8px;\n  text-align: center;\n}\n\nth {\n  background-color: #f4f4f4;\n}\n\n.close {\n  background-color: #f44336;\n  color: white;\n}\n\n.edit {\n  background-color: #4caf50;\n  color: white;\n}\n\n.delete {\n  background-color: orangered;\n  color: white;\n}\n\n.alert {\n  text-align: center;\n  font-size: 18px;\n  color: green;\n}\n</style>\n"],"mappings":";;AAwGA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE;QACTC,QAAQ,EAAE,UAAU;QACpBC,KAAK,EAAE,qBAAqB;QAC5BC,UAAU,EAAE,SAAS;QACrBC,cAAc,EAAE,UAAU;QAC1BC,aAAa,EAAE;MACjB,CAAC;MACDC,iBAAiB,EAAE,CAAC,UAAU,EAAE,iBAAiB,EAAE,mBAAmB,EAAE,QAAQ,EAAE,aAAa,CAAC;MAChGC,QAAQ,EAAE,EAAE;MAAE;MACdC,eAAe,EAAE,EAAE;MAAE;MACrBC,KAAK,EAAE,EAAE,CAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,wBAAwBA,CAACC,QAAQ,EAAE;MACjC,OAAO,IAAI,CAACL,QAAQ,CAACM,MAAM,CAAEC,OAAO,IAAKA,OAAO,CAACC,gBAAe,KAAMH,QAAQ,CAAC;IACjF,CAAC;IACDI,WAAWA,CAACF,OAAO,EAAE;MACnB;MACAG,OAAO,CAACC,GAAG,CAAC,oBAAoBJ,OAAO,CAACK,YAAY,EAAE,CAAC;IACzD,CAAC;IACDC,YAAYA,CAACC,UAAU,EAAE;MACvB;MACAJ,OAAO,CAACC,GAAG,CAAC,oBAAoBG,UAAU,EAAE,CAAC;IAC/C,CAAC;IACDC,WAAWA,CAACD,UAAU,EAAE;MACtB;MACAJ,OAAO,CAACC,GAAG,CAAC,oBAAoBG,UAAU,EAAE,CAAC;IAC/C,CAAC;IACDE,aAAaA,CAACF,UAAU,EAAE;MACxB;MACAJ,OAAO,CAACC,GAAG,CAAC,qBAAqBG,UAAU,EAAE,CAAC;IAChD,CAAC;IACDG,UAAUA,CAACC,IAAI,EAAE;MACf;MACA,MAAMC,OAAM,GAAI;QAAEC,IAAI,EAAE,SAAS;QAAEC,KAAK,EAAE,OAAO;QAAEC,GAAG,EAAE;MAAU,CAAC;MACnE,OAAO,IAAIC,IAAI,CAACL,IAAI,CAAC,CAACM,kBAAkB,CAACC,SAAS,EAAEN,OAAO,CAAC;IAC9D;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}