{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: \"AdminHome\",\n  components: {\n    NavBar\n  },\n  data() {\n    return {};\n  },\n  methods: {},\n  async mounted() {\n    console.log(localStorage.getItem('authToken'));\n    try {\n      const response = await axios.get(\"http://127.0.0.1:5000/admin_home\", {\n        headers: {\n          Authorization: `Token ${localStorage.getItem(\"authToken\")}`\n        }\n      });\n    } catch (error) {\n      console.log(error.response);\n    }\n  }\n};","map":{"version":3,"names":["axios","name","components","NavBar","data","methods","mounted","console","log","localStorage","getItem","response","get","headers","Authorization","error"],"sources":["E:\\MAD 2 Project\\MAD 2 Project\\frontend\\src\\components\\AdminHome.vue"],"sourcesContent":["<template>\r\n    <div class=\"admin-dashboard\">\r\n        <!-- Navbar with links -->\r\n        <div class=\"navbar\">\r\n          <h2>Welcome to Admin Panel</h2>\r\n          <a href=\"/logout_user\">Logout</a>\r\n          <a href=\"/admin_search\">Search</a>\r\n          <a href=\"/admin_home\">Home</a>\r\n        </div>\r\n    \r\n        <!-- Professional Details Section -->\r\n        <h3>Professional Details:</h3>\r\n        <div v-if=\"professionals.length === 0\">\r\n          <p>No Professional Registered</p>\r\n        </div>\r\n        <div v-else>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Email</th>\r\n                <th>Service</th>\r\n                <th>Experience</th>\r\n                <th>Status</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr v-for=\"(professional, index) in professionals\" :key=\"index\">\r\n                <td>{{ professional.fullname }}</td>\r\n                <td><a :href=\"'/prof_view/' + professional.email\">{{ professional.email }}</a></td>\r\n                <td>{{ professional.service_name }}</td>\r\n                <td>{{ professional.experience }} Years</td>\r\n                <td>{{ professional.status }}</td>\r\n                <td>\r\n                  <!-- Buttons for actions -->\r\n                  <button @click=\"handleAction('Accept', professional.email)\">Accept</button>\r\n                  <button @click=\"handleAction('Reject', professional.email)\">Reject</button>\r\n                  <button @click=\"handleAction('Block', professional.email)\">Block</button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n    \r\n        <!-- Services Section -->\r\n        <h3>Services:</h3>\r\n        <div v-if=\"services.length === 0\">\r\n          <p>No Services Exist</p>\r\n        </div>\r\n        <div v-else>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Service ID</th>\r\n                <th>Category</th>\r\n                <th>Name</th>\r\n                <th>Price</th>\r\n                <th>Time</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr v-for=\"(service, index) in services\" :key=\"index\">\r\n                <td>{{ service.service_id }}</td>\r\n                <td>{{ service.service_category }}</td>\r\n                <td>{{ service.service_name }}</td>\r\n                <td>Rs. {{ service.base_price }}</td>\r\n                <td>{{ service.expected_time }} Hours</td>\r\n                <td>\r\n                  <button @click=\"handleAction('Edit', service.service_id)\">Edit</button>\r\n                  <button @click=\"handleAction('Delete', service.service_id)\">Delete</button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <span><a href=\"/service_add\"><button>Add Service</button></a></span>\r\n    \r\n        <!-- Customer Details Section -->\r\n        <h3>Customer Details:</h3>\r\n        <div v-if=\"customers.length === 0\">\r\n          <p>No Customers Registered</p>\r\n        </div>\r\n        <div v-else>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Email</th>\r\n                <th>Contact</th>\r\n                <th>Actions</th>\r\n                <th>Status</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr v-for=\"(customer, index) in customers\" :key=\"index\">\r\n                <td>{{ customer.fullname }}</td>\r\n                <td>{{ customer.email }}</td>\r\n                <td>{{ customer.contact }}</td>\r\n                <td>\r\n                  <button @click=\"handleAction('Block', customer.email)\">Block</button>\r\n                  <button @click=\"handleAction('Unblock', customer.email)\">Unblock</button>\r\n                </td>\r\n                <td>{{ customer.status }}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"AdminHome\",\r\n  components: {\r\n    NavBar,\r\n  },\r\n  data() {\r\n    return {\r\n      \r\n    };\r\n  },\r\n  methods: {},\r\n  async mounted() {\r\n    console.log(localStorage.getItem('authToken'));\r\n    try {\r\n      const response = await axios.get(\"http://127.0.0.1:5000/admin_home\", {\r\n        headers: {\r\n          Authorization: `Token ${localStorage.getItem(\"authToken\")}`,\r\n        },\r\n      });\r\n    } catch (error) {\r\n        console.log(error.response)\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"],"mappings":"AAiHA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,UAAU,EAAE;IACVC;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO,CAEP,CAAC;EACH,CAAC;EACDC,OAAO,EAAE,CAAC,CAAC;EACX,MAAMC,OAAOA,CAAA,EAAG;IACdC,OAAO,CAACC,GAAG,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC;IAC9C,IAAI;MACF,MAAMC,QAAO,GAAI,MAAMX,KAAK,CAACY,GAAG,CAAC,kCAAkC,EAAE;QACnEC,OAAO,EAAE;UACPC,aAAa,EAAE,SAASL,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;QAC3D;MACF,CAAC,CAAC;IACJ,EAAE,OAAOK,KAAK,EAAE;MACZR,OAAO,CAACC,GAAG,CAACO,KAAK,CAACJ,QAAQ;IAC9B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}