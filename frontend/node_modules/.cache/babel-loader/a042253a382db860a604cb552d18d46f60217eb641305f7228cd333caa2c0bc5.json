{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"login-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"error-message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[6] || (_cache[6] = _createElementVNode(\"h2\", null, \"Customer Login\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.loginCustomer && $options.loginCustomer(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"label\", {\n    for: \"email\"\n  }, \"Email:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.email = $event),\n    id: \"email\",\n    placeholder: \"Enter your email\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]])]), _createElementVNode(\"div\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"label\", {\n    for: \"password\"\n  }, \"Password:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    id: \"password\",\n    placeholder: \"Enter your password\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]])]), _cache[5] || (_cache[5] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"Login\", -1 /* HOISTED */)), $data.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"p\", null, _toDisplayString($data.errorMessage), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)], 32 /* NEED_HYDRATION */), _cache[7] || (_cache[7] = _createElementVNode(\"div\", null, \"Register\", -1 /* HOISTED */)), _createVNode(_component_router_link, {\n    to: \"/register_customer\"\n  }), _createVNode(_component_router_view)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","loginCustomer","for","type","$event","$data","email","id","placeholder","required","password","errorMessage","_hoisted_2","_toDisplayString","_createCommentVNode","_createVNode","_component_router_link","to","_component_router_view"],"sources":["E:\\MAD 2 Project\\MAD 2 Project\\frontend\\fapp\\src\\components\\CustomerLogin.vue"],"sourcesContent":["<!-- <template>\r\n    <div class=\"login-form\">\r\n        <h2>Login Customer</h2>\r\n        <form v-on:submit.prevent=\"handleSubmit\">\r\n            <div class=\"form-group\">\r\n                <label for=\"email\">Email</label>\r\n                <input type=\"email\" id=\"email\" v-model=\"form.email\" required>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"pass\">Password</label>\r\n                <input type=\"password\" id=\"pass\" v-model=\"form.password\" required>\r\n            </div>\r\n\r\n            <div v-if=\"error\" class=\"error-message\"><p>{{error}}</p></div>\r\n\r\n            <button type=\"submit\" v-bind:disabled=\"issubmitting\">Submit</button>\r\n\r\n        </form>\r\n\r\n        <h4>Not Account ?</h4><router-link to=\"/customer_register\">Register</router-link><router-view></router-view>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default{\r\n    data(){\r\n        return{\r\n            form:{\r\n                email:'',\r\n                password:''\r\n            },\r\n            error:'',\r\n            isSubmitting:false\r\n        }\r\n    },\r\n    methods:{\r\n        async handleSubmit(){\r\n            this.isSubmitting=true\r\n            this.errorMessage=''\r\n\r\n            try{\r\n                const response= await axios.post('/login_customer',this.form)\r\n\r\n                if(response.status === 200){\r\n                    alert({'message':'Login Successful', 'token':response.data.token})\r\n                }\r\n            }\r\n\r\n            catch(error){\r\n                this.error=error.response?.data?.message || 'An error occured, Please try agian'\r\n            }\r\n            finally{\r\n                this.isSubmitting=false\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.login-form {\r\n    width: 300px;\r\n    margin: 0 auto;\r\n    padding: 20px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 8px;\r\n  }\r\n  \r\n  .form-group {\r\n    margin-bottom: 15px;\r\n  }\r\n  \r\n  input {\r\n    width: 100%;\r\n    padding: 8px;\r\n    margin: 5px 0;\r\n    border-radius: 4px;\r\n    border: 1px solid #ccc;\r\n  }\r\n  \r\n  button {\r\n    width: 100%;\r\n    padding: 10px;\r\n    background-color: #4CAF50;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  button:disabled {\r\n    background-color: #ccc;\r\n  }\r\n  \r\n  .error-message {\r\n    color: red;\r\n    font-size: 14px;\r\n    margin-top: 10px;\r\n  }\r\n\r\n  h4{\r\n    display:inline;\r\n  }\r\n</style> -->\r\n\r\n\r\n\r\n<template>\r\n    <div class=\"login-container\">\r\n      <h2>Customer Login</h2>\r\n      <form @submit.prevent=\"loginCustomer\">\r\n        <div>\r\n          <label for=\"email\">Email:</label>\r\n          <input type=\"email\" v-model=\"email\" id=\"email\" placeholder=\"Enter your email\" required />\r\n        </div>\r\n  \r\n        <div>\r\n          <label for=\"password\">Password:</label>\r\n          <input type=\"password\" v-model=\"password\" id=\"password\" placeholder=\"Enter your password\" required />\r\n        </div>\r\n  \r\n        <button type=\"submit\">Login</button>\r\n  \r\n        <div v-if=\"errorMessage\" class=\"error-message\">\r\n          <p>{{ errorMessage }}</p>\r\n\r\n        </div>\r\n      </form>\r\n      <div>Register</div><router-link to=\"/register_customer\"></router-link><router-view></router-view>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from \"axios\";\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        email: \"\",\r\n        password: \"\",\r\n        errorMessage: \"\",\r\n      };\r\n    },\r\n    methods: {\r\n      async loginCustomer() {\r\n        try {\r\n          // Send POST request to Flask backend\r\n          const response = await axios.post(\"http://127.0.0.1:5000/login_customer\", {\r\n            email: this.email,\r\n            password: this.password,\r\n          });\r\n  \r\n          // Handle successful login response\r\n          console.log(response.data);\r\n          if (response.data.token) {\r\n            // You can save the token in localStorage or Vuex\r\n            localStorage.setItem(\"authToken\", response.data.token);\r\n            // Redirect user to dashboard or other page\r\n            this.$router.push(\"/dashboard\");\r\n          }\r\n        } catch (error) {\r\n          if (error.response) {\r\n            // Handle error response\r\n            this.errorMessage = error.response.data.message;\r\n          } else {\r\n            this.errorMessage = \"An error occurred. Please try again.\";\r\n          }\r\n        }\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .login-container {\r\n    max-width: 400px;\r\n    margin: 0 auto;\r\n    padding: 20px;\r\n    background-color: #f9f9f9;\r\n    border-radius: 8px;\r\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  h2 {\r\n    text-align: center;\r\n  }\r\n  \r\n  div {\r\n    margin-bottom: 15px;\r\n  }\r\n  \r\n  input {\r\n    width: 100%;\r\n    padding: 10px;\r\n    margin-top: 5px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 5px;\r\n  }\r\n  \r\n  button {\r\n    width: 100%;\r\n    padding: 10px;\r\n    background-color: #4CAF50;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  button:hover {\r\n    background-color: #45a049;\r\n  }\r\n  \r\n  .error-message {\r\n    color: red;\r\n    font-size: 14px;\r\n    text-align: center;\r\n  }\r\n  </style>\r\n  "],"mappings":";;EAgHSA,KAAK,EAAC;AAAiB;;EAhHhCC,GAAA;EA+HiCD,KAAK,EAAC;;;;;uBAfnCE,mBAAA,CAqBM,OArBNC,UAqBM,G,0BApBJC,mBAAA,CAAuB,YAAnB,gBAAc,sBAClBA,mBAAA,CAiBO;IAjBAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAlHnBC,cAAA,KAAAC,IAAA,KAkH6BC,QAAA,CAAAC,aAAA,IAAAD,QAAA,CAAAC,aAAA,IAAAF,IAAA,CAAa;MAClCJ,mBAAA,CAGM,c,0BAFJA,mBAAA,CAAiC;IAA1BO,GAAG,EAAC;EAAO,GAAC,QAAM,sB,gBACzBP,mBAAA,CAAyF;IAAlFQ,IAAI,EAAC,OAAO;IArH7B,uBAAAN,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAqHuCC,KAAA,CAAAC,KAAK,GAAAF,MAAA;IAAEG,EAAE,EAAC,OAAO;IAACC,WAAW,EAAC,kBAAkB;IAACC,QAAQ,EAAR;iDAAjDJ,KAAA,CAAAC,KAAK,E,KAGpCX,mBAAA,CAGM,c,0BAFJA,mBAAA,CAAuC;IAAhCO,GAAG,EAAC;EAAU,GAAC,WAAS,sB,gBAC/BP,mBAAA,CAAqG;IAA9FQ,IAAI,EAAC,UAAU;IA1HhC,uBAAAN,MAAA,QAAAA,MAAA,MAAAO,MAAA,IA0H0CC,KAAA,CAAAK,QAAQ,GAAAN,MAAA;IAAEG,EAAE,EAAC,UAAU;IAACC,WAAW,EAAC,qBAAqB;IAACC,QAAQ,EAAR;iDAA1DJ,KAAA,CAAAK,QAAQ,E,+BAG1Cf,mBAAA,CAAoC;IAA5BQ,IAAI,EAAC;EAAQ,GAAC,OAAK,sBAEhBE,KAAA,CAAAM,YAAY,I,cAAvBlB,mBAAA,CAGM,OAHNmB,UAGM,GAFJjB,mBAAA,CAAyB,WAAAkB,gBAAA,CAAnBR,KAAA,CAAAM,YAAY,iB,KAhI5BG,mBAAA,e,sDAoIMnB,mBAAA,CAAmB,aAAd,UAAQ,sBAAMoB,YAAA,CAAmDC,sBAAA;IAAtCC,EAAE,EAAC;EAAoB,IAAeF,YAAA,CAA2BG,sBAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}