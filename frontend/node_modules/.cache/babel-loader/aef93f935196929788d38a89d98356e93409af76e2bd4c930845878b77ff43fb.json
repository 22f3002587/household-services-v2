{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      pro: {\n        totalPro: '',\n        pendingApprovals: '',\n        blockedPro: ''\n      },\n      services: {\n        totalService: '',\n        vacantService: '',\n        registerService: ''\n      },\n      customer: {\n        totalCustomer: '',\n        blockedCustomer: '',\n        activeCustomer: ''\n      }\n    };\n  },\n  methods: {\n    createNewService() {\n      this.$router.push({\n        name: 'AddService'\n      });\n    },\n    sendDailyReminder() {\n      // Logic to send daily reminder\n      console.log(\"Daily reminder sent to service professionals.\");\n    },\n    viewAllActivities() {\n      // Logic to view all activities\n      console.log(\"Viewing all activities...\");\n    }\n  },\n  async mounted() {\n    try {\n      const response = await axios.get(\"http://localhost:5000/admin_summary\", {\n        headers: {\n          Authorization: `${localStorage.getItem('authToken')}`\n        }\n      });\n      if (response.status === 200) {\n        this.pro.totalPro = response.data.totalPro;\n        this.pro.pendingApprovals = response.data.pendingApproval;\n        this.pro.blockedPro = response.data.blockedPro;\n        this.services.totalService = response.data.totalServices;\n        this.services.vacantService = response.data.vacantServices;\n        this.services.registerService = response.data.registerServices;\n        this.customer.totalCustomer = response.data.totalCustomer;\n        this.customer.blockedCustomer = response.data.blockedCustomer;\n        this.customer.activeCustomer = response.data.activeCustomer;\n      }\n    } catch (error) {\n      if (error.response.status === 401) {\n        this.$router.push({\n          name: 'AdminLogin',\n          query: {\n            message: 'You need to sign in first'\n          }\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","pro","totalPro","pendingApprovals","blockedPro","services","totalService","vacantService","registerService","customer","totalCustomer","blockedCustomer","activeCustomer","methods","createNewService","$router","push","name","sendDailyReminder","console","log","viewAllActivities","mounted","response","get","headers","Authorization","localStorage","getItem","status","pendingApproval","totalServices","vacantServices","registerServices","error","query","message"],"sources":["/home/shrisiitm/MAD 2 Project old/MAD 2 Project/frontend/src/components/AdminSummary.vue"],"sourcesContent":["<template>\n    <div class=\"admin-dashboard\">\n        <div class=\"dashboard-header\">\n            <h1>Welcome To Summary Panel</h1>\n        </div>\n\n        <div class=\"dashboard-summary\">\n            <div class=\"summary-section\">\n                <h3>Professional Summary</h3>\n                <div class=\"summary-item\">\n                    <p>Total Professionals: <strong>{{ pro.totalPro }}</strong></p>\n                    <p>Pending Approvals: <strong>{{ pro.pendingApprovals }}</strong></p>\n                    <p>Rejected Professionals: <strong>{{ pro.blockedPro }}</strong></p>\n                </div>\n            </div>\n\n            <div class=\"summary-section\">\n                <h3>Recent Service Requests</h3>\n                <div class=\"summary-item\">\n                    <p>New Requests: <strong>{{ newRequests }}</strong></p>\n                    <p>Pending Requests: <strong>{{ pendingRequests }}</strong></p>\n                    <p>Completed Services: <strong>{{ completedServices }}</strong></p>\n                </div>\n            </div>\n\n            <div class=\"summary-section\">\n                <h3>Services Summary</h3>\n                <div class=\"summary-item\">\n                    <p>Total Services:<strong>{{ services.totalService }}</strong></p>\n                    <p>Vacant Services: <strong>{{ services.vacantService }}</strong></p>\n                    <p>Registered Services: <strong>{{ services.registerService }}</strong></p>\n                </div>\n                <button @click=\"createNewService\" class=\"btn btn-primary\">Create New Service</button>\n            </div>\n\n            <div class=\"summary-section\">\n                <h3>Customer Summary</h3>\n                <div class=\"summary-item\">\n                    <p>Total Customers: <strong>{{ customer.totalCustomer }}</strong></p>\n                    <p>Blocked Customers: <strong>{{ customer.blockedCustomer }}</strong></p>\n                    <p>Active Customers: <strong>{{ customer.activeCustomer }}</strong></p>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n    data() {\n        return {\n            pro:{\n                totalPro:'',\n                pendingApprovals:'',\n                blockedPro:''\n            },\n            services:{\n                totalService:'',\n                vacantService:'',\n                registerService:'',\n            },\n            customer:{\n                totalCustomer:'',\n                blockedCustomer:'',\n                activeCustomer:''\n            }\n        };\n    },\n    methods: {\n        createNewService() {\n           this.$router.push({name:'AddService'});\n        },\n        sendDailyReminder() {\n            // Logic to send daily reminder\n            console.log(\"Daily reminder sent to service professionals.\");\n        },\n        viewAllActivities() {\n            // Logic to view all activities\n            console.log(\"Viewing all activities...\");\n        }\n    },\n    async mounted() {\n        try {\n            const response = await axios.get(\"http://localhost:5000/admin_summary\", {\n                headers: {\n                    Authorization: `${localStorage.getItem('authToken')}`\n                }\n            });\n            if(response.status === 200){\n                this.pro.totalPro = response.data.totalPro;\n                this.pro.pendingApprovals = response.data.pendingApproval;\n                this.pro.blockedPro = response.data.blockedPro;\n                this.services.totalService = response.data.totalServices;\n                this.services.vacantService = response.data.vacantServices;\n                this.services.registerService = response.data.registerServices;\n                this.customer.totalCustomer = response.data.totalCustomer;\n                this.customer.blockedCustomer = response.data.blockedCustomer;\n                this.customer.activeCustomer = response.data.activeCustomer\n                \n            }\n        }\n        catch (error) {\n            if (error.response.status === 401) {\n                this.$router.push({ name: 'AdminLogin', query: { message: 'You need to sign in first' } });\n            }\n        }\n    }\n};\n</script>\n\n<style scoped>\n.admin-dashboard {\n    font-family: Arial, sans-serif;\n    padding: 20px;\n}\n\n.dashboard-header h1 {\n    color: #333;\n}\n\n.dashboard-summary {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 20px;\n    margin-top: 30px;\n}\n\n.summary-section {\n    background-color: #f4f4f4;\n    padding: 15px;\n    border-radius: 5px;\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n}\n\n.summary-item p {\n    margin: 8px 0;\n    font-size: 14px;\n}\n\nh3 {\n    font-size: 18px;\n    color: #007bff;\n}\n\nbutton {\n    padding: 10px;\n    font-size: 14px;\n    border-radius: 5px;\n    border: none;\n    cursor: pointer;\n    transition: background-color 0.3s ease;\n}\n\nbutton:hover {\n    opacity: 0.8;\n}\n\n.btn-primary {\n    background-color: #007bff;\n    color: white;\n    width:23%;\n}\n\n.btn-primary:hover {\n    background-color: #0056b3;\n}\n\n.btn-warning {\n    background-color: #f39c12;\n    color: white;\n}\n\n.btn-warning:hover {\n    background-color: #e67e22;\n}\n\n.btn-info {\n    background-color: #17a2b8;\n    color: white;\n}\n\n.btn-info:hover {\n    background-color: #138496;\n}\n\n.activity-feed ul {\n    list-style-type: none;\n    padding: 0;\n}\n\n.activity-feed li {\n    background-color: #f9f9f9;\n    padding: 10px;\n    border-radius: 5px;\n    margin: 5px 0;\n}\n\n.activity-feed button {\n    margin-top: 10px;\n}\n</style>"],"mappings":";AAgDA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,GAAG,EAAC;QACAC,QAAQ,EAAC,EAAE;QACXC,gBAAgB,EAAC,EAAE;QACnBC,UAAU,EAAC;MACf,CAAC;MACDC,QAAQ,EAAC;QACLC,YAAY,EAAC,EAAE;QACfC,aAAa,EAAC,EAAE;QAChBC,eAAe,EAAC;MACpB,CAAC;MACDC,QAAQ,EAAC;QACLC,aAAa,EAAC,EAAE;QAChBC,eAAe,EAAC,EAAE;QAClBC,cAAc,EAAC;MACnB;IACJ,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACLC,gBAAgBA,CAAA,EAAG;MAChB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAACC,IAAI,EAAC;MAAY,CAAC,CAAC;IACzC,CAAC;IACDC,iBAAiBA,CAAA,EAAG;MAChB;MACAC,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAC;IAChE,CAAC;IACDC,iBAAiBA,CAAA,EAAG;MAChB;MACAF,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;IAC5C;EACJ,CAAC;EACD,MAAME,OAAOA,CAAA,EAAG;IACZ,IAAI;MACA,MAAMC,QAAO,GAAI,MAAMxB,KAAK,CAACyB,GAAG,CAAC,qCAAqC,EAAE;QACpEC,OAAO,EAAE;UACLC,aAAa,EAAE,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;QACvD;MACJ,CAAC,CAAC;MACF,IAAGL,QAAQ,CAACM,MAAK,KAAM,GAAG,EAAC;QACvB,IAAI,CAAC5B,GAAG,CAACC,QAAO,GAAIqB,QAAQ,CAACvB,IAAI,CAACE,QAAQ;QAC1C,IAAI,CAACD,GAAG,CAACE,gBAAe,GAAIoB,QAAQ,CAACvB,IAAI,CAAC8B,eAAe;QACzD,IAAI,CAAC7B,GAAG,CAACG,UAAS,GAAImB,QAAQ,CAACvB,IAAI,CAACI,UAAU;QAC9C,IAAI,CAACC,QAAQ,CAACC,YAAW,GAAIiB,QAAQ,CAACvB,IAAI,CAAC+B,aAAa;QACxD,IAAI,CAAC1B,QAAQ,CAACE,aAAY,GAAIgB,QAAQ,CAACvB,IAAI,CAACgC,cAAc;QAC1D,IAAI,CAAC3B,QAAQ,CAACG,eAAc,GAAIe,QAAQ,CAACvB,IAAI,CAACiC,gBAAgB;QAC9D,IAAI,CAACxB,QAAQ,CAACC,aAAY,GAAIa,QAAQ,CAACvB,IAAI,CAACU,aAAa;QACzD,IAAI,CAACD,QAAQ,CAACE,eAAc,GAAIY,QAAQ,CAACvB,IAAI,CAACW,eAAe;QAC7D,IAAI,CAACF,QAAQ,CAACG,cAAa,GAAIW,QAAQ,CAACvB,IAAI,CAACY,cAAa;MAE9D;IACJ,EACA,OAAOsB,KAAK,EAAE;MACV,IAAIA,KAAK,CAACX,QAAQ,CAACM,MAAK,KAAM,GAAG,EAAE;QAC/B,IAAI,CAACd,OAAO,CAACC,IAAI,CAAC;UAAEC,IAAI,EAAE,YAAY;UAAEkB,KAAK,EAAE;YAAEC,OAAO,EAAE;UAA4B;QAAE,CAAC,CAAC;MAC9F;IACJ;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}