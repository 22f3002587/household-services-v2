{"ast":null,"code":"/* eslint-disable */\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      form: {\n        fullname: \"\",\n        email: \"\",\n        password: \"\",\n        address: \"\",\n        contact: \"\",\n        pincode: \"\",\n        service_category: \"\",\n        experience: \"\",\n        service_name: \"\"\n      },\n      errorMessage: \"\"\n    };\n  },\n  methods: {\n    async handleSubmit() {\n      this.errorMessage = \"\";\n      try {\n        const response = await axios.post(\"http://127.0.0.1:5000/register_professional\", this.form);\n        if (response.status === 200) {\n          alert(response.data.message);\n        }\n      } catch (error) {\n        if (error.response) {\n          if (error.response.status === 400 || error.response.status === 404) {\n            this.errorMessage = error.response.data.message;\n          }\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","form","fullname","email","password","address","contact","pincode","service_category","experience","service_name","errorMessage","methods","handleSubmit","response","post","status","alert","message","error"],"sources":["E:\\MAD 2 Project\\MAD 2 Project\\frontend\\src\\components\\ProfessionalRegister.vue"],"sourcesContent":["<template>\r\n  <h2>Register as a Professional</h2>\r\n  <form @submit.prevent=\"handleSubmit\">\r\n    <div class=\"form-group\">\r\n      <label for=\"fullname\">Full Name</label>\r\n      <input type=\"text\" id=\"fullname\" v-model=\"form.fullname\" required />\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"email\">Email</label>\r\n      <input type=\"email\" id=\"email\" v-model=\"form.email\" required />\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"password\">Password</label>\r\n      <input type=\"password\" id=\"password\" v-model=\"form.password\" required />\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"address\">Address</label>\r\n      <input type=\"text\" id=\"address\" v-model=\"form.address\" required />\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"contact\">Contact Number</label>\r\n      <input type=\"text\" id=\"contact\" v-model=\"form.contact\" required />\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"pincode\">Pincode</label>\r\n      <input type=\"text\" id=\"pincode\" v-model=\"form.pincode\" required />\r\n    </div>\r\n\r\n    <div v-if=\"errorMessage\" class=\"error-message\">\r\n      <p>{{ errorMessage }}</p>\r\n    </div>\r\n\r\n    <button>Register</button>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\n/* eslint-disable */\r\nimport axios from \"axios\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      form: {\r\n        fullname: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        address: \"\",\r\n        contact: \"\",\r\n        pincode: \"\",\r\n        service_category: \"\",\r\n        experience: \"\",\r\n        service_name: \"\",\r\n      },\r\n      errorMessage: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    async handleSubmit() {\r\n      this.errorMessage = \"\"; \r\n\r\n      try {\r\n        const response = await axios.post(\"http://127.0.0.1:5000/register_professional\",this.form);\r\n\r\n        if (response.status === 200) {\r\n          alert(response.data.message);\r\n        }\r\n\r\n        \r\n      } catch (error) {\r\n        if (error.response) {\r\n          if (error.response.status === 400 || error.response.status === 404) {\r\n            this.errorMessage = error.response.data.message;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nform{\r\n  width: 30%;\r\n  margin: 0 auto;\r\n}\r\n\r\nform > button{\r\n  margin:0px 10px;\r\n}\r\n</style>\r\n"],"mappings":"AA0CA;AACA,OAAOA,KAAI,MAAO,OAAO;AACzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE,EAAE;QACZC,OAAO,EAAE,EAAE;QACXC,OAAO,EAAE,EAAE;QACXC,OAAO,EAAE,EAAE;QACXC,gBAAgB,EAAE,EAAE;QACpBC,UAAU,EAAE,EAAE;QACdC,YAAY,EAAE;MAChB,CAAC;MACDC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,YAAYA,CAAA,EAAG;MACnB,IAAI,CAACF,YAAW,GAAI,EAAE;MAEtB,IAAI;QACF,MAAMG,QAAO,GAAI,MAAMf,KAAK,CAACgB,IAAI,CAAC,6CAA6C,EAAC,IAAI,CAACd,IAAI,CAAC;QAE1F,IAAIa,QAAQ,CAACE,MAAK,KAAM,GAAG,EAAE;UAC3BC,KAAK,CAACH,QAAQ,CAACd,IAAI,CAACkB,OAAO,CAAC;QAC9B;MAGF,EAAE,OAAOC,KAAK,EAAE;QACd,IAAIA,KAAK,CAACL,QAAQ,EAAE;UAClB,IAAIK,KAAK,CAACL,QAAQ,CAACE,MAAK,KAAM,GAAE,IAAKG,KAAK,CAACL,QAAQ,CAACE,MAAK,KAAM,GAAG,EAAE;YAClE,IAAI,CAACL,YAAW,GAAIQ,KAAK,CAACL,QAAQ,CAACd,IAAI,CAACkB,OAAO;UACjD;QACF;MACF;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}