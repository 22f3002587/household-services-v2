{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      form: {\n        fullname: \"\",\n        email: \"\",\n        password: \"\",\n        address: \"\",\n        contact: \"\",\n        pincode: \"\"\n      },\n      errorMessage: \"\"\n    };\n  },\n  methods: {\n    async handleSubmit() {\n      this.errorMessage = \"\"; // Reset error message on each submit\n\n      try {\n        const response = await axios.post(\"http://127.0.0.1:5000/register_customer\", this.form, {\n          validateStatus: function (status) {\n            return status === 2000 || status === 400;\n          }\n        });\n        if (response.status === 200) {\n          alert(response.data.message);\n        }\n        if (response.status === 400) {\n          this.errorMessage = response.data.message;\n        }\n      } catch (error) {\n        this.errorMessage = \"An error occurred. Please try again.\";\n        console.log(error.message);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","form","fullname","email","password","address","contact","pincode","errorMessage","methods","handleSubmit","response","post","validateStatus","status","alert","message","error","console","log"],"sources":["E:\\MAD 2 Project\\MAD 2 Project\\frontend\\src\\components\\CustomerRegister.vue"],"sourcesContent":["<template>\r\n  <div class=\"registration-form\">\r\n    <h2>Register as a Customer</h2>\r\n    <form @submit.prevent=\"handleSubmit\">\r\n      <div class=\"form-group\">\r\n        <label for=\"fullname\">Full Name</label>\r\n        <input type=\"text\" id=\"fullname\" v-model=\"form.fullname\" required />\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"email\">Email</label>\r\n        <input type=\"email\" id=\"email\" v-model=\"form.email\" required />\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Password</label>\r\n        <input type=\"password\" id=\"password\" v-model=\"form.password\" required />\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"address\">Address</label>\r\n        <input type=\"text\" id=\"address\" v-model=\"form.address\" required />\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"contact\">Contact Number</label>\r\n        <input type=\"text\" id=\"contact\" v-model=\"form.contact\" required />\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"pincode\">Pincode</label>\r\n        <input type=\"text\" id=\"pincode\" v-model=\"form.pincode\" required />\r\n      </div>\r\n\r\n      <div v-if=\"errorMessage\" class=\"error-message\">\r\n        <p>{{ errorMessage }}</p>\r\n      </div>\r\n\r\n      <button>Register</button>\r\n    </form>\r\n\r\n    <router-link to=\"/customer_login\">Login</router-link>\r\n    <router-view></router-view>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      form: {\r\n        fullname: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        address: \"\",\r\n        contact: \"\",\r\n        pincode: \"\",\r\n      },\r\n      errorMessage: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    async handleSubmit() {\r\n      this.errorMessage = \"\"; // Reset error message on each submit\r\n\r\n      try {\r\n        const response = await axios.post(\r\n          \"http://127.0.0.1:5000/register_customer\",\r\n          this.form,{\r\n            validateStatus:function(status){\r\n              return status === 2000 || status === 400\r\n            }\r\n          }\r\n        );\r\n\r\n        if (response.status === 200) {\r\n          alert(response.data.message);\r\n\r\n        }\r\n\r\n        if(response.status === 400){\r\n          this.errorMessage=response.data.message\r\n        }\r\n      } catch (error) {\r\n        this.errorMessage = \"An error occurred. Please try again.\";\r\n        console.log(error.message)\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.registration-form {\r\n  width: 300px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 8px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 15px;\r\n}\r\n\r\ninput {\r\n  width: 100%;\r\n  padding: 8px;\r\n  margin: 5px 0;\r\n  border-radius: 4px;\r\n  border: 1px solid #ccc;\r\n}\r\n\r\nbutton {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #4caf50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:disabled {\r\n  background-color: #ccc;\r\n}\r\n\r\n.error-message {\r\n  color: red;\r\n  font-size: 14px;\r\n  margin-top: 10px;\r\n}\r\n</style>\r\n"],"mappings":"AA+CA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE,EAAE;QACZC,OAAO,EAAE,EAAE;QACXC,OAAO,EAAE,EAAE;QACXC,OAAO,EAAE;MACX,CAAC;MACDC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,YAAYA,CAAA,EAAG;MACnB,IAAI,CAACF,YAAW,GAAI,EAAE,EAAE;;MAExB,IAAI;QACF,MAAMG,QAAO,GAAI,MAAMZ,KAAK,CAACa,IAAI,CAC/B,yCAAyC,EACzC,IAAI,CAACX,IAAI,EAAC;UACRY,cAAc,EAAC,SAAAA,CAASC,MAAM,EAAC;YAC7B,OAAOA,MAAK,KAAM,IAAG,IAAKA,MAAK,KAAM,GAAE;UACzC;QACF,CACF,CAAC;QAED,IAAIH,QAAQ,CAACG,MAAK,KAAM,GAAG,EAAE;UAC3BC,KAAK,CAACJ,QAAQ,CAACX,IAAI,CAACgB,OAAO,CAAC;QAE9B;QAEA,IAAGL,QAAQ,CAACG,MAAK,KAAM,GAAG,EAAC;UACzB,IAAI,CAACN,YAAY,GAACG,QAAQ,CAACX,IAAI,CAACgB,OAAM;QACxC;MACF,EAAE,OAAOC,KAAK,EAAE;QACd,IAAI,CAACT,YAAW,GAAI,sCAAsC;QAC1DU,OAAO,CAACC,GAAG,CAACF,KAAK,CAACD,OAAO;MAC3B;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}