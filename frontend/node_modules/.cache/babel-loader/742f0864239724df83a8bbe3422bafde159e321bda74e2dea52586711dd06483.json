{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      userData: {\n        fullname: 'John Doe',\n        email: 'john@example.com',\n        experience: '5 years',\n        specialisation: 'Software Development',\n        adminApproval: 'Approved'\n      },\n      services: [{\n        service_id: 1,\n        service_name: 'House Cleaning',\n        description: 'Thorough cleaning',\n        base_price: 1500,\n        service_category: 'Cleaning'\n      }, {\n        service_id: 2,\n        service_name: 'Hair Styling',\n        description: 'Trendy styles',\n        base_price: 800,\n        service_category: 'Saloon'\n      }\n      // Add more services as needed\n      ],\n      categories: ['Cleaning', 'Home Decoration', 'Health & Wellness', 'Saloon', 'Electrician'],\n      serviceRequests: [{\n        request_id: 101,\n        service_name: 'House Cleaning',\n        professional_id: 'PRO123',\n        requested_date: '2024-10-01',\n        scheduled_date: '2024-10-05',\n        closed_date: null,\n        status: 'Requested'\n      }\n      // Add more requests as needed\n      ],\n      alertMessage: '',\n      showProfile: false\n    };\n  },\n  methods: {\n    toggleProfile() {\n      this.showProfile = !this.showProfile;\n    },\n    filteredServices(category) {\n      return this.services.filter(service => service.service_category === category);\n    },\n    bookService(serviceId) {\n      this.alertMessage = `Service with ID ${serviceId} booked successfully!`;\n    },\n    closeRequest(requestId) {\n      this.alertMessage = `Request ${requestId} has been closed.`;\n    },\n    editRequest(requestId) {\n      this.alertMessage = `Editing request ${requestId}.`;\n    },\n    deleteRequest(requestId) {\n      this.alertMessage = `Request ${requestId} has been deleted.`;\n      this.serviceRequests = this.serviceRequests.filter(req => req.request_id !== requestId);\n    },\n    formatDate(date) {\n      const d = new Date(date);\n      return `${d.getDate().toString().padStart(2, '0')}-${(d.getMonth() + 1).toString().padStart(2, '0')}-${d.getFullYear()}`;\n    },\n    async fetchuserData() {\n      const token = localStorage.getItem('authToken');\n      try {\n        const reponse = await axios.get('http://localhost:5000/customer/dashboard', {\n          headers: {\n            Authorization: token\n          }\n        });\n      } catch (error) {\n        if (error.response) {\n          alert('Something went wrong');\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","userData","fullname","email","experience","specialisation","adminApproval","services","service_id","service_name","description","base_price","service_category","categories","serviceRequests","request_id","professional_id","requested_date","scheduled_date","closed_date","status","alertMessage","showProfile","methods","toggleProfile","filteredServices","category","filter","service","bookService","serviceId","closeRequest","requestId","editRequest","deleteRequest","req","formatDate","date","d","Date","getDate","toString","padStart","getMonth","getFullYear","fetchuserData","token","localStorage","getItem","reponse","get","headers","Authorization","error","response","alert"],"sources":["E:\\MAD 2 Project\\MAD 2 Project\\frontend\\src\\components\\CustomerHome.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"navbar\">\r\n      <h1>Welcome to Customer Dashboard</h1>\r\n      <a href=\"/logout_user\">Logout</a>\r\n      <a href=\"/customer_search\">Search</a>\r\n      <a href=\"#\">Home</a>\r\n    </div>\r\n    <br />\r\n\r\n    <div class=\"profile\">\r\n      <button class=\"prof-button\" @click=\"toggleProfile\">View Profile</button>\r\n      <div class=\"dropdown-profile-content\">\r\n        <img src=\"/static/image.png\" alt=\"user-image\" />\r\n        <h3>Hello, {{ userData.fullname }}</h3>\r\n        <h3>\r\n          Your Email: <span>{{ userData.email }}</span>\r\n        </h3>\r\n        <h3>Experience: {{ userData.experience }}</h3>\r\n        <h3>Specialisation: {{ userData.specialisation }}</h3>\r\n        <h3>Admin Approval: {{ userData.adminApproval }}</h3>\r\n      </div>\r\n    </div>\r\n\r\n    <h2>Hello, {{ userData.fullname }}</h2>\r\n    <br />\r\n\r\n    <div class=\"services\">\r\n      <h3>Looking for which service category?</h3>\r\n      <div v-for=\"category in categories\" :key=\"category\" class=\"dropdown\">\r\n        <button>{{ category }}</button>\r\n        <div class=\"dropdown-content\" v-if=\"filteredServices(category).length\">\r\n          <table>\r\n            <tr\r\n              v-for=\"service in filteredServices(category)\"\r\n              :key=\"service.service_id\"\r\n            >\r\n              <td>{{ service.service_name }}</td>\r\n              <td>{{ service.description }}</td>\r\n              <td>Rs. {{ service.base_price }}</td>\r\n              <td>\r\n                <button class=\"btn\" @click=\"bookService(service.service_id)\">\r\n                  Book\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <p\r\n      v-if=\"alertMessage\"\r\n      style=\"text-align: center; font-size: 20px; color: green\"\r\n    >\r\n      {{ alertMessage }}\r\n    </p>\r\n\r\n    <div class=\"table\">\r\n      <p style=\"font-size: 29px; font-family: system-ui\">Requested Services:</p>\r\n      <p v-if=\"!serviceRequests.length\" id=\"no_exist\">\r\n        Your service request is empty\r\n      </p>\r\n\r\n      <table v-else>\r\n        <tr>\r\n          <th>Request ID</th>\r\n          <th>Service Name</th>\r\n          <th>Professional ID</th>\r\n          <th>Request Date</th>\r\n          <th>Scheduled Date</th>\r\n          <th>Closed Date</th>\r\n          <th>Status</th>\r\n          <th>Action</th>\r\n        </tr>\r\n        <tr v-for=\"request in serviceRequests\" :key=\"request.request_id\">\r\n          <td>{{ request.request_id }}</td>\r\n          <td>{{ request.service_name }}</td>\r\n          <td>{{ request.professional_id }}</td>\r\n          <td>{{ formatDate(request.requested_date) }}</td>\r\n          <td>{{ formatDate(request.scheduled_date) }}</td>\r\n          <td>\r\n            {{\r\n              request.closed_date\r\n                ? formatDate(request.closed_date)\r\n                : \"Closing Date Pending\"\r\n            }}\r\n          </td>\r\n          <td>{{ request.status }}</td>\r\n          <td>\r\n            <button\r\n              v-if=\"request.status === 'Requested'\"\r\n              class=\"close\"\r\n              @click=\"closeRequest(request.request_id)\"\r\n            >\r\n              Close\r\n            </button>\r\n            <button\r\n              v-if=\"request.status === 'Requested'\"\r\n              class=\"edit close\"\r\n              @click=\"editRequest(request.request_id)\"\r\n            >\r\n              Edit\r\n            </button>\r\n            <button\r\n              v-if=\"\r\n                ['Requested', 'Closed by customer'].includes(request.status)\r\n              \"\r\n              style=\"background-color: orangered\"\r\n              class=\"close\"\r\n              @click=\"deleteRequest(request.request_id)\"\r\n            >\r\n              Delete\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nexport default {\r\n  data() {\r\n    return {\r\n      userData: {\r\n        fullname: 'John Doe',\r\n        email: 'john@example.com',\r\n        experience: '5 years',\r\n        specialisation: 'Software Development',\r\n        adminApproval: 'Approved',\r\n      },\r\n      services: [\r\n        { service_id: 1, service_name: 'House Cleaning', description: 'Thorough cleaning', base_price: 1500, service_category: 'Cleaning' },\r\n        { service_id: 2, service_name: 'Hair Styling', description: 'Trendy styles', base_price: 800, service_category: 'Saloon' },\r\n        // Add more services as needed\r\n      ],\r\n      categories: ['Cleaning', 'Home Decoration', 'Health & Wellness', 'Saloon', 'Electrician'],\r\n      serviceRequests: [\r\n        { request_id: 101, service_name: 'House Cleaning', professional_id: 'PRO123', requested_date: '2024-10-01', scheduled_date: '2024-10-05', closed_date: null, status: 'Requested' },\r\n        // Add more requests as needed\r\n      ],\r\n      alertMessage: '',\r\n      showProfile: false,\r\n    };\r\n  },\r\n  methods: {\r\n    toggleProfile() {\r\n      this.showProfile = !this.showProfile;\r\n    },\r\n    filteredServices(category) {\r\n      return this.services.filter(service => service.service_category === category);\r\n    },\r\n    bookService(serviceId) {\r\n      this.alertMessage = `Service with ID ${serviceId} booked successfully!`;\r\n    },\r\n    closeRequest(requestId) {\r\n      this.alertMessage = `Request ${requestId} has been closed.`;\r\n    },\r\n    editRequest(requestId) {\r\n      this.alertMessage = `Editing request ${requestId}.`;\r\n    },\r\n    deleteRequest(requestId) {\r\n      this.alertMessage = `Request ${requestId} has been deleted.`;\r\n      this.serviceRequests = this.serviceRequests.filter(req => req.request_id !== requestId);\r\n    },\r\n    formatDate(date) {\r\n      const d = new Date(date);\r\n      return `${d.getDate().toString().padStart(2, '0')}-${(d.getMonth() + 1).toString().padStart(2, '0')}-${d.getFullYear()}`;\r\n\r\n    },\r\n    async fetchuserData(){\r\n      const token= localStorage.getItem('authToken')\r\n      try{\r\n        const reponse = await axios.get('http://localhost:5000/customer/dashboard',{headers:{\r\n          Authorization:token\r\n        }\r\n        })\r\n      }\r\n      catch(error){\r\n        if(error.response){\r\n          alert('Something went wrong')\r\n        }\r\n      }\r\n    }\r\n  }\r\n}        \r\n</script>\r\n\r\n<style scoped>\r\nbody {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.navbar {\r\n  background-color: black;\r\n  color: white;\r\n  margin-top: -5px;\r\n}\r\n\r\nh3 {\r\n  position: absolute;\r\n  margin: 118px;\r\n  font-size: 24px;\r\n}\r\n\r\n.navbar a {\r\n  font-size: 19px;\r\n  float: right;\r\n  display: block;\r\n  padding: 0px 16px;\r\n  text-decoration: none;\r\n  color: azure;\r\n  margin-top: -13px;\r\n  margin-bottom: 28px;\r\n}\r\n\r\nh1 {\r\n  font-size: xx-large;\r\n  font-weight: bolder;\r\n  margin-bottom: -35px;\r\n  padding: 20px;\r\n  margin-top: 2px;\r\n  font-family: Cambria, Cochin, Georgia, Times, \"Times New Roman\", serif;\r\n}\r\n\r\nh2 {\r\n  margin: 16px;\r\n  margin-top: -23px;\r\n  padding: 12px;\r\n  text-align: center;\r\n  font-size: 34px;\r\n}\r\n\r\n.table {\r\n  margin: 23px 111px;\r\n}\r\n\r\n.services {\r\n  margin: 0 auto;\r\n  display: flex;\r\n  align-items: flex-end;\r\n  justify-content: space-around;\r\n  border: 2px solid white;\r\n  border-radius: 13px;\r\n  width: 68%;\r\n  height: 175px;\r\n  background-color: cornsilk;\r\n}\r\n\r\n.dropdown {\r\n  position: relative;\r\n  display: inline-block;\r\n}\r\n\r\n.dropdown-content {\r\n  display: none;\r\n  position: absolute;\r\n  background-color: white;\r\n  width: 350px;\r\n  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\r\n  z-index: 1;\r\n  padding: 10px;\r\n  top: 100%;\r\n  left: -40%;\r\n}\r\n\r\n.dropdown:hover .dropdown-content {\r\n  display: block;\r\n}\r\n\r\nbutton {\r\n  padding: 10px;\r\n  cursor: pointer;\r\n  margin-bottom: 19px;\r\n  height: 64px;\r\n  width: 130px;\r\n  border: 3px solid blue;\r\n  background-color: rgb(20, 228, 228);\r\n  border-radius: 12px;\r\n  font-size: 16px;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #afdd5f;\r\n}\r\n\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\nth,\r\ntd {\r\n  border: 1px solid black;\r\n  padding: 8px;\r\n  text-align: left;\r\n}\r\n\r\n.btn {\r\n  width: 108%;\r\n  height: 41px;\r\n  font-size: 90%;\r\n  background-color: white;\r\n}\r\n\r\n.profile {\r\n  position: relative;\r\n  display: inline-block;\r\n  left: 53%;\r\n  margin-top: 27px;\r\n}\r\n\r\n.dropdown-profile-content {\r\n  display: none;\r\n  position: absolute;\r\n  background-color: antiquewhite;\r\n  width: 295px;\r\n  box-shadow: 0px 8px 16px 0px black;\r\n  z-index: 1;\r\n  padding: 10px;\r\n  top: 100%;\r\n  left: 50%;\r\n  transform: translate(-50%);\r\n  border-radius: 5px;\r\n}\r\n\r\n.prof-button {\r\n  background-color: green;\r\n  color: white;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n  width: 125px;\r\n  height: 37px;\r\n}\r\n\r\n.prof-button:hover {\r\n  background-color: darkgreen;\r\n}\r\n\r\nimg {\r\n  width: 90px;\r\n  margin: 0px 100px;\r\n  margin-bottom: -15px;\r\n}\r\n\r\n.close {\r\n  background-color: black;\r\n  color: white;\r\n  width: 85px;\r\n  height: 35px;\r\n  font-size: 15px;\r\n  border: none;\r\n}\r\n\r\n.close:hover {\r\n  background-color: paleturquoise;\r\n  color: black;\r\n}\r\n\r\n.edit {\r\n  background-color: lightgreen;\r\n  border: lightgreen;\r\n  width: 106px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}