{"ast":null,"code":"export default {\n  data() {\n    return {\n      customerName: \"John Doe\",\n      // Replace with actual customer data\n      serviceRequests: [],\n      // Array to store active service requests\n      services: [] // Array to store available services\n    };\n  },\n  mounted() {\n    this.getServiceRequests();\n    this.getAvailableServices();\n  },\n  methods: {\n    // Fetch active service requests from the API\n    getServiceRequests() {\n      // Make API call here\n      this.serviceRequests = [{\n        id: 1,\n        service_name: \"AC Servicing\",\n        status: \"requested\",\n        date_of_request: \"2025-03-12\"\n      }, {\n        id: 2,\n        service_name: \"Plumbing\",\n        status: \"closed\",\n        date_of_request: \"2025-02-20\"\n      }];\n    },\n    // Fetch available services from the API\n    getAvailableServices() {\n      // Make API call here\n      this.services = [{\n        id: 1,\n        name: \"AC Servicing\",\n        price: 1500\n      }, {\n        id: 2,\n        name: \"Plumbing\",\n        price: 800\n      }];\n    },\n    // Add a review to a completed service request\n    addReview(requestId) {\n      // Handle adding review\n      alert(`Add review for service request ID: ${requestId}`);\n    },\n    // Create a new service request\n    createRequest(serviceId) {\n      // Handle creating a new service request\n      alert(`Requesting service with ID: ${serviceId}`);\n    },\n    // Logout function\n    logout() {\n      // Handle logout\n      alert('Logging out');\n    }\n  }\n};","map":{"version":3,"names":["data","customerName","serviceRequests","services","mounted","getServiceRequests","getAvailableServices","methods","id","service_name","status","date_of_request","name","price","addReview","requestId","alert","createRequest","serviceId","logout"],"sources":["/home/shrisiitm/MAD 2 Project old/MAD 2 Project/frontend/src/components/CustomerHome.vue"],"sourcesContent":["<template>\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <!-- Sidebar -->\n      <div class=\"col-md-3 bg-light p-4\">\n        <h3>Customer Dashboard</h3>\n        <ul class=\"list-group\">\n          <li class=\"list-group-item\">\n            <router-link to=\"/service-requests\">My Service Requests</router-link>\n          </li>\n          <li class=\"list-group-item\">\n            <router-link to=\"/search-services\">Search for Services</router-link>\n          </li>\n          <li class=\"list-group-item\">\n            <router-link to=\"/create-request\">Create New Service Request</router-link>\n          </li>\n        </ul>\n        <button class=\"btn btn-danger mt-3\" @click=\"logout\">Logout</button>\n      </div>\n\n      <!-- Main Content -->\n      <div class=\"col-md-9\">\n        <div class=\"container mt-4\">\n          <h4>Welcome, {{ customerName }}</h4>\n\n          <div class=\"my-4\">\n            <h5>Active Service Requests</h5>\n            <div v-if=\"serviceRequests.length === 0\">\n              <p>You have no active service requests at the moment.</p>\n            </div>\n            <div v-else>\n              <ul class=\"list-group\">\n                <li class=\"list-group-item\" v-for=\"request in serviceRequests\" :key=\"request.id\">\n                  <strong>Service:</strong> {{ request.service_name }}<br>\n                  <strong>Status:</strong> {{ request.status }}<br>\n                  <strong>Requested On:</strong> {{ request.date_of_request }}<br>\n                  <button v-if=\"request.status === 'closed'\" class=\"btn btn-info btn-sm\" @click=\"addReview(request.id)\">Add Review</button>\n                </li>\n              </ul>\n            </div>\n          </div>\n\n          <div class=\"my-4\">\n            <h5>Available Services</h5>\n            <div v-if=\"services.length === 0\">\n              <p>No services available right now.</p>\n            </div>\n            <div v-else>\n              <ul class=\"list-group\">\n                <li class=\"list-group-item\" v-for=\"service in services\" :key=\"service.id\">\n                  <strong>{{ service.name }}</strong><br>\n                  Price: â‚¹{{ service.price }}<br>\n                  <button class=\"btn btn-primary btn-sm\" @click=\"createRequest(service.id)\">Request Service</button>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      customerName: \"John Doe\",  // Replace with actual customer data\n      serviceRequests: [], // Array to store active service requests\n      services: [] // Array to store available services\n    };\n  },\n  mounted() {\n    this.getServiceRequests();\n    this.getAvailableServices();\n  },\n  methods: {\n    // Fetch active service requests from the API\n    getServiceRequests() {\n      // Make API call here\n      this.serviceRequests = [\n        { id: 1, service_name: \"AC Servicing\", status: \"requested\", date_of_request: \"2025-03-12\" },\n        { id: 2, service_name: \"Plumbing\", status: \"closed\", date_of_request: \"2025-02-20\" }\n      ];\n    },\n    // Fetch available services from the API\n    getAvailableServices() {\n      // Make API call here\n      this.services = [\n        { id: 1, name: \"AC Servicing\", price: 1500 },\n        { id: 2, name: \"Plumbing\", price: 800 }\n      ];\n    },\n    // Add a review to a completed service request\n    addReview(requestId) {\n      // Handle adding review\n      alert(`Add review for service request ID: ${requestId}`);\n    },\n    // Create a new service request\n    createRequest(serviceId) {\n      // Handle creating a new service request\n      alert(`Requesting service with ID: ${serviceId}`);\n    },\n    // Logout function\n    logout() {\n      // Handle logout\n      alert('Logging out');\n    }\n  }\n};\n</script>\n\n<style scoped>\n.container-fluid {\n  margin-top: 20px;\n}\n\nh4 {\n  color: #333;\n}\n\n.btn {\n  margin-top: 10px;\n}\n</style>\n"],"mappings":"AAgEA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,UAAU;MAAG;MAC3BC,eAAe,EAAE,EAAE;MAAE;MACrBC,QAAQ,EAAE,EAAC,CAAE;IACf,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,kBAAkB,CAAC,CAAC;IACzB,IAAI,CAACC,oBAAoB,CAAC,CAAC;EAC7B,CAAC;EACDC,OAAO,EAAE;IACP;IACAF,kBAAkBA,CAAA,EAAG;MACnB;MACA,IAAI,CAACH,eAAc,GAAI,CACrB;QAAEM,EAAE,EAAE,CAAC;QAAEC,YAAY,EAAE,cAAc;QAAEC,MAAM,EAAE,WAAW;QAAEC,eAAe,EAAE;MAAa,CAAC,EAC3F;QAAEH,EAAE,EAAE,CAAC;QAAEC,YAAY,EAAE,UAAU;QAAEC,MAAM,EAAE,QAAQ;QAAEC,eAAe,EAAE;MAAa,EACpF;IACH,CAAC;IACD;IACAL,oBAAoBA,CAAA,EAAG;MACrB;MACA,IAAI,CAACH,QAAO,GAAI,CACd;QAAEK,EAAE,EAAE,CAAC;QAAEI,IAAI,EAAE,cAAc;QAAEC,KAAK,EAAE;MAAK,CAAC,EAC5C;QAAEL,EAAE,EAAE,CAAC;QAAEI,IAAI,EAAE,UAAU;QAAEC,KAAK,EAAE;MAAI,EACvC;IACH,CAAC;IACD;IACAC,SAASA,CAACC,SAAS,EAAE;MACnB;MACAC,KAAK,CAAC,sCAAsCD,SAAS,EAAE,CAAC;IAC1D,CAAC;IACD;IACAE,aAAaA,CAACC,SAAS,EAAE;MACvB;MACAF,KAAK,CAAC,+BAA+BE,SAAS,EAAE,CAAC;IACnD,CAAC;IACD;IACAC,MAAMA,CAAA,EAAG;MACP;MACAH,KAAK,CAAC,aAAa,CAAC;IACtB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}