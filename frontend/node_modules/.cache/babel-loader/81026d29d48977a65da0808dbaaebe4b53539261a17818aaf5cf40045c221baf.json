{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      searchType: \"\",\n      searchQuery: \"\",\n      services: [],\n      customerEmail: \"customer@example.com\" // Replace with actual user data\n    };\n  },\n  computed: {\n    filteredServices() {\n      if (!this.searchQuery) return this.services;\n      return this.services.filter(service => {\n        const query = this.searchQuery.toLowerCase();\n        if (this.searchType === 'service_name') {\n          return service.service_name.toLowerCase().includes(query);\n        } else if (this.searchType === 'service_category') {\n          return service.service_category.toLowerCase().includes(query);\n        }\n        return true;\n      });\n    }\n  },\n  methods: {\n    logoutuser() {\n      localStorage.removeItem('authToken');\n    },\n    async bookService(serviceId) {\n      try {\n        const response = await fetch(\"/customer_search\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            form_id: \"book\",\n            service_id: serviceId,\n            customer_email: this.customerEmail\n          })\n        });\n        const result = await response.json();\n        alert(result.message || \"Service booked successfully!\");\n      } catch (error) {\n        console.error(\"Error booking service:\", error);\n      }\n    }\n  },\n  async mounted() {\n    try {\n      const response = await axios.get('http://localhost:5000/search_services', {\n        headers: {\n          Authorization: `${localStorage.getItem('authToken')}`\n        }\n      });\n      if (response.status === 200) {\n        this.services = response.data.services;\n      }\n    } catch (error) {\n      if (error.response.status === 401) {\n        this.$router.push({\n          name: 'CustomerLogin',\n          query: {\n            message: 'You need to login first'\n          }\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","searchType","searchQuery","services","customerEmail","computed","filteredServices","filter","service","query","toLowerCase","service_name","includes","service_category","methods","logoutuser","localStorage","removeItem","bookService","serviceId","response","fetch","method","headers","body","JSON","stringify","form_id","service_id","customer_email","result","json","alert","message","error","console","mounted","get","Authorization","getItem","status","$router","push","name"],"sources":["/home/shrisiitm/MAD 2 Project old/MAD 2 Project/frontend/src/components/CustomerSearch.vue"],"sourcesContent":["<template>\n    <div>\n      <nav class=\"navbar\">\n        <h1>Customer Dashboard</h1>\n        <div>\n          <router-link :to=\"{ name: 'CustomerHome' }\">Home</router-link>\n          <router-link :to=\"{ name: 'HomePage' }\" @click=\"logoutuser\">Logout</router-link>\n        </div>\n      </nav>\n  \n      <div class=\"content\">\n        <h3>Search for a service</h3>\n        <form @submit.prevent=\"searchServices\">\n          <label for=\"search_type\">Search By: </label>\n          <select v-model=\"searchType\" required>\n            <option value=\"\">Select</option>\n            <option value=\"service_name\">Service Name</option>\n            <option value=\"service_category\">Service Category</option>\n          </select>\n          <input type=\"text\" v-model=\"searchQuery\" placeholder=\"Enter service...\" required>\n        </form>\n  \n        <table v-if=\"filteredServices.length\">\n          <thead>\n            <tr>\n              <th>Service Category</th>\n              <th>Service Name</th>\n              <th>Rating</th>\n              <th>Description</th>\n              <th>Price</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"record in filteredServices\" :key=\"record.service_id\">\n              <td>{{ record.service_category }}</td>\n              <td>{{ record.service_name }}</td>\n              <td>{{ record.rating }} of 5</td>\n              <td>{{ record.description }}</td>\n              <td>Rs. {{ record.base_price }}</td>\n              <td>\n                <button class=\"btn\" @click=\"bookService(record.service_id)\">Book</button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <p v-if=\"filteredServices.length === 0\">No services found.</p>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        searchType: \"\",\n        searchQuery: \"\",\n        services: [],\n        customerEmail: \"customer@example.com\", // Replace with actual user data\n      };\n    },\n    computed: {\n      filteredServices() {\n        if (!this.searchQuery) return this.services;\n  \n        return this.services.filter((service) => {\n          const query = this.searchQuery.toLowerCase();\n          if (this.searchType === 'service_name') {\n            return service.service_name.toLowerCase().includes(query);\n          } else if (this.searchType === 'service_category') {\n            return service.service_category.toLowerCase().includes(query);\n          }\n          return true;\n        });\n      },\n    },\n    methods: {\n      logoutuser() {\n        localStorage.removeItem('authToken');\n      },\n  \n      async bookService(serviceId) {\n        try {\n          const response = await fetch(\"/customer_search\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n              form_id: \"book\",\n              service_id: serviceId,\n              customer_email: this.customerEmail,\n            }),\n          });\n  \n          const result = await response.json();\n          alert(result.message || \"Service booked successfully!\");\n        } catch (error) {\n          console.error(\"Error booking service:\", error);\n        }\n      },\n    },\n    async mounted() {\n      try {\n        const response = await axios.get('http://localhost:5000/search_services', {\n          headers: {\n            Authorization: `${localStorage.getItem('authToken')}`,\n          },\n        });\n        if (response.status === 200) {\n          this.services = response.data.services;\n        }\n      } catch (error) {\n        if (error.response.status === 401) {\n          this.$router.push({ name: 'CustomerLogin', query: { message: 'You need to login first' } });\n        }\n      }\n    },\n  };\n  </script>\n  \n  <style scoped>\n  body {\n    font-family: 'Arial', sans-serif;\n    background-color: #f4f4f4;\n    color: #333;\n    margin: 0;\n    padding: 0;\n  }\n  \n  .navbar {\n    background-color: #333;\n    color: white;\n    padding: 10px 20px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-top:-60px;\n  }\n  \n  .navbar a {\n    color: white;\n    text-decoration: none;\n    padding: 10px 20px;\n    transition: background 0.3s;\n  }\n  \n  .navbar a:hover {\n    background-color: #575757;\n    border-radius: 5px;\n  }\n  \n  .content {\n    max-width: 900px;\n    margin: 30px auto;\n    padding: 20px;\n    background-color: white;\n    border-radius: 8px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  }\n  \n  h3 {\n    text-align: center;\n    font-size: 22px;\n    margin-bottom: 30px;\n  }\n  \n  form {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 40px;\n  }\n  \n  select, input[type=\"text\"], button {\n    padding: 10px;\n    margin: 0 10px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    font-size: 16px;\n    width:20%;\n  }\n  \n  select {\n    width: 160px;\n  }\n  \n  button {\n    background-color: #333;\n    color: white;\n    cursor: pointer;\n    transition: background 0.3s;\n  }\n  \n  button:hover {\n    background-color: #575757;\n  }\n  \n  table {\n    width: 100%;\n    border-collapse: collapse;\n    margin-top: 20px;\n  }\n  \n  th, td {\n    padding: 12px 15px;\n    text-align: left;\n    border-bottom: 1px solid #ddd;\n  }\n  \n  th {\n    background-color: #333;\n    color: white;\n  }\n  \n  td {\n    background-color: #f9f9f9;\n  }\n  \n  .btn {\n    padding: 8px 12px;\n    background-color: #333;\n    color: white;\n    border: none;\n    cursor: pointer;\n    border-radius: 5px;\n    width:auto;\n  }\n  \n  .btn:hover {\n    background-color: #575757;\n  }\n  </style>\n  "],"mappings":";;;AAoDE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,EAAE;MACdC,WAAW,EAAE,EAAE;MACfC,QAAQ,EAAE,EAAE;MACZC,aAAa,EAAE,sBAAsB,CAAE;IACzC,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAAC,IAAI,CAACJ,WAAW,EAAE,OAAO,IAAI,CAACC,QAAQ;MAE3C,OAAO,IAAI,CAACA,QAAQ,CAACI,MAAM,CAAEC,OAAO,IAAK;QACvC,MAAMC,KAAI,GAAI,IAAI,CAACP,WAAW,CAACQ,WAAW,CAAC,CAAC;QAC5C,IAAI,IAAI,CAACT,UAAS,KAAM,cAAc,EAAE;UACtC,OAAOO,OAAO,CAACG,YAAY,CAACD,WAAW,CAAC,CAAC,CAACE,QAAQ,CAACH,KAAK,CAAC;QAC3D,OAAO,IAAI,IAAI,CAACR,UAAS,KAAM,kBAAkB,EAAE;UACjD,OAAOO,OAAO,CAACK,gBAAgB,CAACH,WAAW,CAAC,CAAC,CAACE,QAAQ,CAACH,KAAK,CAAC;QAC/D;QACA,OAAO,IAAI;MACb,CAAC,CAAC;IACJ;EACF,CAAC;EACDK,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACXC,YAAY,CAACC,UAAU,CAAC,WAAW,CAAC;IACtC,CAAC;IAED,MAAMC,WAAWA,CAACC,SAAS,EAAE;MAC3B,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,kBAAkB,EAAE;UAC/CC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBC,OAAO,EAAE,MAAM;YACfC,UAAU,EAAET,SAAS;YACrBU,cAAc,EAAE,IAAI,CAACzB;UACvB,CAAC;QACH,CAAC,CAAC;QAEF,MAAM0B,MAAK,GAAI,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;QACpCC,KAAK,CAACF,MAAM,CAACG,OAAM,IAAK,8BAA8B,CAAC;MACzD,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF;EACF,CAAC;EACD,MAAME,OAAOA,CAAA,EAAG;IACd,IAAI;MACF,MAAMhB,QAAO,GAAI,MAAMrB,KAAK,CAACsC,GAAG,CAAC,uCAAuC,EAAE;QACxEd,OAAO,EAAE;UACPe,aAAa,EAAE,GAAGtB,YAAY,CAACuB,OAAO,CAAC,WAAW,CAAC;QACrD;MACF,CAAC,CAAC;MACF,IAAInB,QAAQ,CAACoB,MAAK,KAAM,GAAG,EAAE;QAC3B,IAAI,CAACrC,QAAO,GAAIiB,QAAQ,CAACpB,IAAI,CAACG,QAAQ;MACxC;IACF,EAAE,OAAO+B,KAAK,EAAE;MACd,IAAIA,KAAK,CAACd,QAAQ,CAACoB,MAAK,KAAM,GAAG,EAAE;QACjC,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;UAAEC,IAAI,EAAE,eAAe;UAAElC,KAAK,EAAE;YAAEwB,OAAO,EAAE;UAA0B;QAAE,CAAC,CAAC;MAC7F;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}